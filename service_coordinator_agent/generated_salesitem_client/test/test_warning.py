# coding: utf-8

"""
    Sales Item API

    Get information for items in different contexts. Note that this is an extendable interface that might introduce new types without increase in major version including new values in enumerations. 

    The version of the OpenAPI document: 1.45.0
    Contact: paul.eriksson@ingka.ikea.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from salesitem_client.models.warning import Warning

class TestWarning(unittest.TestCase):
    """Warning unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Warning:
        """Test Warning
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Warning`
        """
        model = Warning()
        if include_optional:
            return Warning(
                texts = [
                    salesitem_client.models.warning_text.warningText(
                        text = 'This product can expose you to chemicals including lead, which is known to the State of California to cause cancer and birth defects or other reproductive harm. For more information go to www.P65Warnings.ca.gov.', 
                        urls = [
                            salesitem_client.models.warning_url.warningUrl(
                                text = 'www.P65Warnings.ca.gov', 
                                url = 'https://www.P65Warnings.ca.gov', )
                            ], )
                    ],
                type = 'CHOKING_HAZARD'
            )
        else:
            return Warning(
                type = 'CHOKING_HAZARD',
        )
        """

    def testWarning(self):
        """Test Warning"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
