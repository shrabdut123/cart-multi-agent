# coding: utf-8

"""
    Sales Item API

    Get information for items in different contexts. Note that this is an extendable interface that might introduce new types without increase in major version including new values in enumerations. 

    The version of the OpenAPI document: 1.45.0
    Contact: paul.eriksson@ingka.ikea.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from salesitem_client.models.backoff_to_hero import BackoffToHero

class TestBackoffToHero(unittest.TestCase):
    """BackoffToHero unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BackoffToHero:
        """Test BackoffToHero
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BackoffToHero`
        """
        model = BackoffToHero()
        if include_optional:
            return BackoffToHero(
                heroes = [
                    salesitem_client.models.item_hero.itemHero(
                        item_key = salesitem_client.models.item_key.itemKey(
                            item_no = '00263850', 
                            item_type = 'ART', ), 
                        name = 'IVAR NNN 1 sec/shelves 89x30x179 pine', 
                        upsell_arguments = [
                            salesitem_client.models.upsell_argument.upsellArgument(
                                long_text = 'You can move shelves and adapt the spacing to suit your needs', 
                                short_text = 'Adjustable shelves', )
                            ], )
                    ]
            )
        else:
            return BackoffToHero(
        )
        """

    def testBackoffToHero(self):
        """Test BackoffToHero"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
