# coding: utf-8

"""
    OrderCapture

    Order Capture Checkout API Definitions

    The version of the OpenAPI document: v2.0.8
    Contact: dl.order.capture.dev.se@ingka.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from order_capture_client.models.checkout_patch_request import CheckoutPatchRequest

class TestCheckoutPatchRequest(unittest.TestCase):
    """CheckoutPatchRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CheckoutPatchRequest:
        """Test CheckoutPatchRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CheckoutPatchRequest`
        """
        model = CheckoutPatchRequest()
        if include_optional:
            return CheckoutPatchRequest(
                checkout_id = '',
                family_card_no = '1233645878937646',
                contact_allowed = True,
                profile_type = 'REGULAR',
                language_code = 'en',
                items = [
                    order_capture_client.models.patch_item_request.PatchItemRequest(
                        item_no = '123456789', 
                        quantity = 56, )
                    ],
                coupons = [
                    order_capture_client.models.coupon_request.CouponRequest(
                        coupon_id = 'A23gd653gfte534', )
                    ],
                coupons_to_remove = [
                    order_capture_client.models.coupon_request.CouponRequest(
                        coupon_id = 'A23gd653gfte534', )
                    ]
            )
        else:
            return CheckoutPatchRequest(
        )
        """

    def testCheckoutPatchRequest(self):
        """Test CheckoutPatchRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
