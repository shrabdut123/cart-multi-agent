# coding: utf-8

"""
    OrderCapture

    Order Capture Checkout API Definitions

    The version of the OpenAPI document: v2.0.8
    Contact: dl.order.capture.dev.se@ingka.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from order_capture_client.models.express_pay_context import ExpressPayContext

class TestExpressPayContext(unittest.TestCase):
    """ExpressPayContext unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ExpressPayContext:
        """Test ExpressPayContext
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ExpressPayContext`
        """
        model = ExpressPayContext()
        if include_optional:
            return ExpressPayContext(
                timestamp = '',
                payment_context_id = '',
                payment_endpoint = '',
                checkout_id = '',
                redacted_address = order_capture_client.models.redacted_address.RedactedAddress(
                    redacted_zip_code = '', 
                    state_code = '', 
                    city = '', ),
                billing_contact = order_capture_client.models.billing_contact.BillingContact(
                    checkout_id = '', 
                    id = '', 
                    first_name = 'First', 
                    middle_name = 'First', 
                    last_name = 'Last', 
                    second_surname = 'Last', 
                    phonetic_first_name = 'First', 
                    phonetic_last_name = 'Last', 
                    city = 'Helsingborg', 
                    state = 'State', 
                    country = 'Sweden', 
                    county = 'Skane', 
                    address_line1 = 'Address', 
                    address_line2 = 'Address', 
                    address_line3 = 'Address', 
                    land_line_number = '+46707938475', 
                    fax_number = '+46707938475', 
                    state_code = 'PR', 
                    fiscal_code = 'MLN45266378', 
                    tax_code = '42356343', 
                    tax_code_type = 'VAT', 
                    recipient_code_type = 'EMAIL', 
                    recipient_code = 'abc@checkout.co', 
                    country_of_origin = 'Sweden', 
                    email = 'ordercapture@email.com', 
                    alternate_collector_first_name = 'First', 
                    alternate_collector_sur_name = 'Last', 
                    same_as_shipping_contact = True, 
                    mobile_number = '+46707938475', 
                    zip_code = '25185', 
                    business_info = order_capture_client.models.business_info.BusinessInfo(
                        business_name = 'IKEA', 
                        phonetic_business_name = 'IKEA', 
                        organization_number = '12345', 
                        tax_identifier_no = '12345', 
                        tax_code = '42356343', 
                        tax_code_type = 'VAT', ), ),
                shipping_contact = order_capture_client.models.shipping_contact.ShippingContact(
                    checkout_id = '', 
                    id = '', 
                    first_name = 'First', 
                    middle_name = 'First', 
                    last_name = 'Last', 
                    second_surname = 'Last', 
                    phonetic_first_name = 'First', 
                    phonetic_last_name = 'Last', 
                    city = 'Helsingborg', 
                    state = 'State', 
                    country = 'Sweden', 
                    county = 'Skane', 
                    address_line1 = 'Address', 
                    address_line2 = 'Address', 
                    address_line3 = 'Address', 
                    land_line_number = '+46707938475', 
                    fax_number = '+46707938475', 
                    state_code = 'PR', 
                    fiscal_code = 'MLN45266378', 
                    tax_code = '42356343', 
                    tax_code_type = 'VAT', 
                    recipient_code_type = 'EMAIL', 
                    recipient_code = 'abc@checkout.co', 
                    country_of_origin = 'Sweden', 
                    email = 'ordercapture@email.com', 
                    zip_code = '25185', 
                    mobile_number = '+46707938475', )
            )
        else:
            return ExpressPayContext(
        )
        """

    def testExpressPayContext(self):
        """Test ExpressPayContext"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
