# coding: utf-8

"""
    OrderCapture

    Order Capture Checkout API Definitions

    The version of the OpenAPI document: v2.0.8
    Contact: dl.order.capture.dev.se@ingka.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from order_capture_client.models.question_set import QuestionSet

class TestQuestionSet(unittest.TestCase):
    """QuestionSet unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> QuestionSet:
        """Test QuestionSet
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `QuestionSet`
        """
        model = QuestionSet()
        if include_optional:
            return QuestionSet(
                service_id = 'SGR40000606',
                service_method = 'TRUCK',
                type = 'FLAT',
                questions = [
                    order_capture_client.models.question.Question(
                        reference = 'ADDITIONAL_INFO_TSP', 
                        translated_reference = 'Delivery Restrictions? (e.g. Size of product, access to residence, parking restrictions, elevator availability etc.', 
                        options = [
                            order_capture_client.models.option.Option(
                                option_value = 'true', 
                                free_text_required = True, )
                            ], 
                        answer = order_capture_client.models.answer.Answer(
                            option_value = 'true', 
                            free_text = '', ), 
                        regex = '', 
                        mandatory = True, )
                    ],
                service_id_service_relation_map = {
                    'key' : order_capture_client.models.service_question_relation.ServiceQuestionRelation(
                        service_method = 'TRUCK', 
                        question_references = FLOOR_NO, TRUCK_RESTRICTIONS, )
                    }
            )
        else:
            return QuestionSet(
        )
        """

    def testQuestionSet(self):
        """Test QuestionSet"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
