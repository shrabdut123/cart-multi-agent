# coding: utf-8

"""
    OrderCapture

    Order Capture Checkout API Definitions

    The version of the OpenAPI document: v2.0.8
    Contact: dl.order.capture.dev.se@ingka.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from order_capture_client.models.checkout_dto import CheckoutDto

class TestCheckoutDto(unittest.TestCase):
    """CheckoutDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CheckoutDto:
        """Test CheckoutDto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CheckoutDto`
        """
        model = CheckoutDto()
        if include_optional:
            return CheckoutDto(
                checkout_id = '',
                shopping_type = 'ONLINE',
                user_id = '',
                user_type = 'GUEST',
                channel = 'WEBAPP',
                shopping_app_platform = 'IKEAAPP_IOS',
                family_card_no = '',
                profile_type = 'REGULAR',
                service_area = order_capture_client.models.service_area.ServiceArea(
                    zip_code = 'H1E2V4', 
                    state_code = 'QC', 
                    city = 'QC', 
                    id = '971ff3f1-c378-4611-8ff3-74b1c844015b', 
                    delivery_country_code = 'LU', ),
                apply_employee_discount = True,
                employee_id = '',
                quantity = 1.337,
                cart_check_sum = '',
                currency = 'SEK',
                retail_id = '',
                order_number = '',
                order_number_source = '',
                payment_context_id = '',
                deleted_payment_context_ids = [
                    ''
                    ],
                language_code = '',
                delivery_and_services = order_capture_client.models.delivery_and_service_entity.DeliveryAndServiceEntity(
                    delivery_and_service_id = '', 
                    delivery_service = order_capture_client.models.delivery_service_entity.DeliveryServiceEntity(
                        id = '', 
                        delivery_arrangements_id = '', 
                        type = 'HOME_DELIVERY', 
                        fulfillment_method_type = 'HOME_DELIVERY', 
                        solution_id = '', 
                        solution = 'STANDARD', 
                        solution_price = order_capture_client.models.price.Price(
                            type = 'TOTAL_PRICE', 
                            incl_tax = 1.337, 
                            excl_tax = 1.337, 
                            tax = 1.337, 
                            regular_price = order_capture_client.models.base_price.BasePrice(
                                incl_tax = 1.337, 
                                excl_tax = 1.337, 
                                tax = 1.337, 
                                tax_list = [
                                    order_capture_client.models.tax.Tax(
                                        tax_jurisdiction = order_capture_client.models.tax_jurisdiction.TaxJurisdiction(
                                            tax_jurisdiction_type = '', 
                                            tax_jurisdiction_code = '', ), 
                                        type = '', 
                                        code = '', 
                                        tax_percentage = 1.337, 
                                        tax_amount = 1.337, 
                                        taxable_amount = 1.337, )
                                    ], 
                                discount_list = [
                                    order_capture_client.models.discount.Discount(
                                        amount = 1.337, 
                                        name = '', 
                                        type = '', 
                                        code = '', 
                                        kind = '', 
                                        discount_details = order_capture_client.models.discount_details.DiscountDetails(
                                            count = 56, 
                                            amount = 1.337, 
                                            value = 1.337, 
                                            max_discount_amount = 1.337, 
                                            type = '', 
                                            apply_on = '', ), 
                                        id = '', 
                                        sequence = 56, 
                                        description = '', 
                                        discount_type = '', 
                                        discount_level = '', 
                                        valid_from_date = '', 
                                        valid_to_date = '', 
                                        applied = True, )
                                    ], 
                                discount_summary = order_capture_client.models.discount_summary.DiscountSummary(
                                    all = 1.337, 
                                    discounts = 1.337, 
                                    family_price = 1.337, 
                                    promotions = 1.337, 
                                    coupons = 1.337, 
                                    employee = 1.337, 
                                    family_promotions = 1.337, 
                                    family_discounts = 1.337, 
                                    family = 1.337, 
                                    manual = 1.337, 
                                    voucher = 1.337, ), 
                                order_discount_summary_list = [
                                    order_capture_client.models.order_discount_summary.OrderDiscountSummary(
                                        amount = 1.337, 
                                        name = '', )
                                    ], 
                                per_item_price = order_capture_client.models.item_price.ItemPrice(
                                    incl_tax = 1.337, 
                                    excl_tax = 1.337, 
                                    tax = 1.337, 
                                    valid_from = '', 
                                    valid_to = '', ), 
                                per_item_sale_price = order_capture_client.models.item_price.ItemPrice(
                                    incl_tax = 1.337, 
                                    excl_tax = 1.337, 
                                    tax = 1.337, 
                                    valid_from = '', 
                                    valid_to = '', ), 
                                tax_summary_list = [
                                    order_capture_client.models.spe_tax_summary.SpeTaxSummary(
                                        tax_type = '', 
                                        total_tax_amount = 1.337, 
                                        tax_percent = 1.337, )
                                    ], 
                                price_excl_savings = order_capture_client.models.price_excl_savings.PriceExclSavings(
                                    incl_tax = 1.337, 
                                    excl_tax = 1.337, 
                                    tax = 1.337, ), 
                                total_order_savings = 1.337, ), 
                            family_price = order_capture_client.models.base_price.BasePrice(
                                incl_tax = 1.337, 
                                excl_tax = 1.337, 
                                tax = 1.337, 
                                total_order_savings = 1.337, ), 
                            tax_list = [
                                order_capture_client.models.tax.Tax(
                                    type = '', 
                                    code = '', 
                                    tax_percentage = 1.337, 
                                    tax_amount = 1.337, 
                                    taxable_amount = 1.337, )
                                ], 
                            currency_code = '', 
                            discount_list = [
                                order_capture_client.models.discount.Discount(
                                    amount = 1.337, 
                                    name = '', 
                                    type = '', 
                                    code = '', 
                                    kind = '', 
                                    id = '', 
                                    sequence = 56, 
                                    description = '', 
                                    discount_type = '', 
                                    discount_level = '', 
                                    valid_from_date = '', 
                                    valid_to_date = '', 
                                    applied = True, )
                                ], 
                            order_discount_summary_list = [
                                order_capture_client.models.order_discount_summary.OrderDiscountSummary(
                                    amount = 1.337, 
                                    name = '', )
                                ], 
                            roll_up_price_type = 'FAMILY', 
                            tax_summary_list = [
                                order_capture_client.models.spe_tax_summary.SpeTaxSummary(
                                    tax_type = '', 
                                    total_tax_amount = 1.337, 
                                    tax_percent = 1.337, )
                                ], 
                            discount_summary = order_capture_client.models.discount_summary.DiscountSummary(
                                all = 1.337, 
                                discounts = 1.337, 
                                promotions = 1.337, 
                                coupons = 1.337, 
                                employee = 1.337, 
                                family_promotions = 1.337, 
                                family_discounts = 1.337, 
                                family = 1.337, 
                                manual = 1.337, 
                                voucher = 1.337, ), 
                            price_excl_savings = order_capture_client.models.price_excl_savings.PriceExclSavings(
                                incl_tax = 1.337, 
                                excl_tax = 1.337, 
                                tax = 1.337, ), 
                            per_item_sale_price = , 
                            per_item_price = , 
                            total_order_savings = 1.337, 
                            additional_savings_as_family = 1.337, ), 
                        price_override_reference = 1.337, 
                        expiry_time = '', 
                        deliveries = [
                            order_capture_client.models.delivery_entity.DeliveryEntity(
                                id = '', 
                                fulfillment_delivery_id = '', 
                                service_item_id = '', 
                                range_of_days = True, 
                                ship_node = '', 
                                merge_node_list = '', 
                                type = 'TRUCK', 
                                unit_of_measure = '', 
                                delivery_price = order_capture_client.models.price.Price(
                                    type = 'TOTAL_PRICE', 
                                    incl_tax = 1.337, 
                                    excl_tax = 1.337, 
                                    tax = 1.337, 
                                    currency_code = '', 
                                    roll_up_price_type = 'FAMILY', 
                                    total_order_savings = 1.337, 
                                    additional_savings_as_family = 1.337, ), 
                                price_override_reference = 1.337, 
                                delivery_items = [
                                    order_capture_client.models.delivery_item.DeliveryItem(
                                        id = '', 
                                        item_id = '', 
                                        parent_id = '', 
                                        item_no = '', 
                                        item_type = '', 
                                        quantity = 1.337, 
                                        ship_node = '', 
                                        exceptional_qty = True, 
                                        external_ref_id = '', )
                                    ], 
                                selected_pick_up_point = order_capture_client.models.pick_up_point_entity.PickUpPointEntity(
                                    oc_pupid = '', 
                                    id = '', 
                                    name = '', 
                                    identifier = '', 
                                    lsc = '', 
                                    latitude = '', 
                                    longitude = '', 
                                    opening_hours_mon_time = '', 
                                    opening_hours_tue_time = '', 
                                    opening_hours_wed_time = '', 
                                    opening_hours_thu_time = '', 
                                    opening_hours_fri_time = '', 
                                    opening_hours_sat_time = '', 
                                    opening_hours_sun_time = '', 
                                    country = '', 
                                    zip_code = '', 
                                    city = '', 
                                    state = '', 
                                    address_line1 = '', 
                                    address_line2 = '', 
                                    address_line3 = '', 
                                    address_line4 = '', 
                                    distance = 1.337, ), 
                                selected_slot = order_capture_client.models.delivery_slot.DeliverySlot(
                                    metadata = order_capture_client.models.delivery_slot_metadata.DeliverySlotMetadata(
                                        time_zone = '', 
                                        has_price_deviation = True, ), 
                                    id = '', 
                                    from_date_time = '', 
                                    to_date_time = '', 
                                    node = '', 
                                    resource_pool_id = '', 
                                    tsp_id = '', 
                                    tsp_name = '', 
                                    slot_attribute_group = '', 
                                    capability = [
                                        order_capture_client.models.delivery_slot_capability.DeliverySlotCapability(
                                            type = '', 
                                            selected = True, )
                                        ], 
                                    price = order_capture_client.models.slot_price.SlotPrice(
                                        incl_tax = 1.337, 
                                        excl_tax = 1.337, ), ), 
                                taxation_info = '', 
                                is_exceptional_qty = True, 
                                is_exceptional_volume = True, )
                            ], 
                        wheel_chair_capability = True, ), 
                    service_and_time_windows = [
                        order_capture_client.models.service_and_time_windows_entity.ServiceAndTimeWindowsEntity(
                            service_item_no = '', 
                            so_method = '', 
                            service_id = '', 
                            service_type = '', 
                            capacity_unit = '', )
                        ], ),
                total_price = order_capture_client.models.price.Price(
                    type = 'TOTAL_PRICE', 
                    incl_tax = 1.337, 
                    excl_tax = 1.337, 
                    tax = 1.337, 
                    regular_price = order_capture_client.models.base_price.BasePrice(
                        incl_tax = 1.337, 
                        excl_tax = 1.337, 
                        tax = 1.337, 
                        tax_list = [
                            order_capture_client.models.tax.Tax(
                                tax_jurisdiction = order_capture_client.models.tax_jurisdiction.TaxJurisdiction(
                                    tax_jurisdiction_type = '', 
                                    tax_jurisdiction_code = '', ), 
                                type = '', 
                                code = '', 
                                tax_percentage = 1.337, 
                                tax_amount = 1.337, 
                                taxable_amount = 1.337, )
                            ], 
                        discount_list = [
                            order_capture_client.models.discount.Discount(
                                amount = 1.337, 
                                name = '', 
                                type = '', 
                                code = '', 
                                kind = '', 
                                discount_details = order_capture_client.models.discount_details.DiscountDetails(
                                    count = 56, 
                                    amount = 1.337, 
                                    value = 1.337, 
                                    max_discount_amount = 1.337, 
                                    type = '', 
                                    apply_on = '', ), 
                                id = '', 
                                sequence = 56, 
                                description = '', 
                                discount_type = '', 
                                discount_level = '', 
                                valid_from_date = '', 
                                valid_to_date = '', 
                                applied = True, )
                            ], 
                        discount_summary = order_capture_client.models.discount_summary.DiscountSummary(
                            all = 1.337, 
                            discounts = 1.337, 
                            family_price = 1.337, 
                            promotions = 1.337, 
                            coupons = 1.337, 
                            employee = 1.337, 
                            family_promotions = 1.337, 
                            family_discounts = 1.337, 
                            family = 1.337, 
                            manual = 1.337, 
                            voucher = 1.337, ), 
                        order_discount_summary_list = [
                            order_capture_client.models.order_discount_summary.OrderDiscountSummary(
                                amount = 1.337, 
                                name = '', )
                            ], 
                        per_item_price = order_capture_client.models.item_price.ItemPrice(
                            incl_tax = 1.337, 
                            excl_tax = 1.337, 
                            tax = 1.337, 
                            valid_from = '', 
                            valid_to = '', ), 
                        per_item_sale_price = order_capture_client.models.item_price.ItemPrice(
                            incl_tax = 1.337, 
                            excl_tax = 1.337, 
                            tax = 1.337, 
                            valid_from = '', 
                            valid_to = '', ), 
                        tax_summary_list = [
                            order_capture_client.models.spe_tax_summary.SpeTaxSummary(
                                tax_type = '', 
                                total_tax_amount = 1.337, 
                                tax_percent = 1.337, )
                            ], 
                        price_excl_savings = order_capture_client.models.price_excl_savings.PriceExclSavings(
                            incl_tax = 1.337, 
                            excl_tax = 1.337, 
                            tax = 1.337, ), 
                        total_order_savings = 1.337, ), 
                    family_price = order_capture_client.models.base_price.BasePrice(
                        incl_tax = 1.337, 
                        excl_tax = 1.337, 
                        tax = 1.337, 
                        total_order_savings = 1.337, ), 
                    tax_list = [
                        order_capture_client.models.tax.Tax(
                            type = '', 
                            code = '', 
                            tax_percentage = 1.337, 
                            tax_amount = 1.337, 
                            taxable_amount = 1.337, )
                        ], 
                    currency_code = '', 
                    discount_list = [
                        order_capture_client.models.discount.Discount(
                            amount = 1.337, 
                            name = '', 
                            type = '', 
                            code = '', 
                            kind = '', 
                            id = '', 
                            sequence = 56, 
                            description = '', 
                            discount_type = '', 
                            discount_level = '', 
                            valid_from_date = '', 
                            valid_to_date = '', 
                            applied = True, )
                        ], 
                    order_discount_summary_list = [
                        order_capture_client.models.order_discount_summary.OrderDiscountSummary(
                            amount = 1.337, 
                            name = '', )
                        ], 
                    roll_up_price_type = 'FAMILY', 
                    tax_summary_list = [
                        order_capture_client.models.spe_tax_summary.SpeTaxSummary(
                            tax_type = '', 
                            total_tax_amount = 1.337, 
                            tax_percent = 1.337, )
                        ], 
                    discount_summary = order_capture_client.models.discount_summary.DiscountSummary(
                        all = 1.337, 
                        discounts = 1.337, 
                        promotions = 1.337, 
                        coupons = 1.337, 
                        employee = 1.337, 
                        family_promotions = 1.337, 
                        family_discounts = 1.337, 
                        family = 1.337, 
                        manual = 1.337, 
                        voucher = 1.337, ), 
                    price_excl_savings = order_capture_client.models.price_excl_savings.PriceExclSavings(
                        incl_tax = 1.337, 
                        excl_tax = 1.337, 
                        tax = 1.337, ), 
                    per_item_sale_price = , 
                    per_item_price = , 
                    total_order_savings = 1.337, 
                    additional_savings_as_family = 1.337, ),
                shipping_price = order_capture_client.models.price.Price(
                    type = 'TOTAL_PRICE', 
                    incl_tax = 1.337, 
                    excl_tax = 1.337, 
                    tax = 1.337, 
                    regular_price = order_capture_client.models.base_price.BasePrice(
                        incl_tax = 1.337, 
                        excl_tax = 1.337, 
                        tax = 1.337, 
                        tax_list = [
                            order_capture_client.models.tax.Tax(
                                tax_jurisdiction = order_capture_client.models.tax_jurisdiction.TaxJurisdiction(
                                    tax_jurisdiction_type = '', 
                                    tax_jurisdiction_code = '', ), 
                                type = '', 
                                code = '', 
                                tax_percentage = 1.337, 
                                tax_amount = 1.337, 
                                taxable_amount = 1.337, )
                            ], 
                        discount_list = [
                            order_capture_client.models.discount.Discount(
                                amount = 1.337, 
                                name = '', 
                                type = '', 
                                code = '', 
                                kind = '', 
                                discount_details = order_capture_client.models.discount_details.DiscountDetails(
                                    count = 56, 
                                    amount = 1.337, 
                                    value = 1.337, 
                                    max_discount_amount = 1.337, 
                                    type = '', 
                                    apply_on = '', ), 
                                id = '', 
                                sequence = 56, 
                                description = '', 
                                discount_type = '', 
                                discount_level = '', 
                                valid_from_date = '', 
                                valid_to_date = '', 
                                applied = True, )
                            ], 
                        discount_summary = order_capture_client.models.discount_summary.DiscountSummary(
                            all = 1.337, 
                            discounts = 1.337, 
                            family_price = 1.337, 
                            promotions = 1.337, 
                            coupons = 1.337, 
                            employee = 1.337, 
                            family_promotions = 1.337, 
                            family_discounts = 1.337, 
                            family = 1.337, 
                            manual = 1.337, 
                            voucher = 1.337, ), 
                        order_discount_summary_list = [
                            order_capture_client.models.order_discount_summary.OrderDiscountSummary(
                                amount = 1.337, 
                                name = '', )
                            ], 
                        per_item_price = order_capture_client.models.item_price.ItemPrice(
                            incl_tax = 1.337, 
                            excl_tax = 1.337, 
                            tax = 1.337, 
                            valid_from = '', 
                            valid_to = '', ), 
                        per_item_sale_price = order_capture_client.models.item_price.ItemPrice(
                            incl_tax = 1.337, 
                            excl_tax = 1.337, 
                            tax = 1.337, 
                            valid_from = '', 
                            valid_to = '', ), 
                        tax_summary_list = [
                            order_capture_client.models.spe_tax_summary.SpeTaxSummary(
                                tax_type = '', 
                                total_tax_amount = 1.337, 
                                tax_percent = 1.337, )
                            ], 
                        price_excl_savings = order_capture_client.models.price_excl_savings.PriceExclSavings(
                            incl_tax = 1.337, 
                            excl_tax = 1.337, 
                            tax = 1.337, ), 
                        total_order_savings = 1.337, ), 
                    family_price = order_capture_client.models.base_price.BasePrice(
                        incl_tax = 1.337, 
                        excl_tax = 1.337, 
                        tax = 1.337, 
                        total_order_savings = 1.337, ), 
                    tax_list = [
                        order_capture_client.models.tax.Tax(
                            type = '', 
                            code = '', 
                            tax_percentage = 1.337, 
                            tax_amount = 1.337, 
                            taxable_amount = 1.337, )
                        ], 
                    currency_code = '', 
                    discount_list = [
                        order_capture_client.models.discount.Discount(
                            amount = 1.337, 
                            name = '', 
                            type = '', 
                            code = '', 
                            kind = '', 
                            id = '', 
                            sequence = 56, 
                            description = '', 
                            discount_type = '', 
                            discount_level = '', 
                            valid_from_date = '', 
                            valid_to_date = '', 
                            applied = True, )
                        ], 
                    order_discount_summary_list = [
                        order_capture_client.models.order_discount_summary.OrderDiscountSummary(
                            amount = 1.337, 
                            name = '', )
                        ], 
                    roll_up_price_type = 'FAMILY', 
                    tax_summary_list = [
                        order_capture_client.models.spe_tax_summary.SpeTaxSummary(
                            tax_type = '', 
                            total_tax_amount = 1.337, 
                            tax_percent = 1.337, )
                        ], 
                    discount_summary = order_capture_client.models.discount_summary.DiscountSummary(
                        all = 1.337, 
                        discounts = 1.337, 
                        promotions = 1.337, 
                        coupons = 1.337, 
                        employee = 1.337, 
                        family_promotions = 1.337, 
                        family_discounts = 1.337, 
                        family = 1.337, 
                        manual = 1.337, 
                        voucher = 1.337, ), 
                    price_excl_savings = order_capture_client.models.price_excl_savings.PriceExclSavings(
                        incl_tax = 1.337, 
                        excl_tax = 1.337, 
                        tax = 1.337, ), 
                    per_item_sale_price = , 
                    per_item_price = , 
                    total_order_savings = 1.337, 
                    additional_savings_as_family = 1.337, ),
                service_price = order_capture_client.models.price.Price(
                    type = 'TOTAL_PRICE', 
                    incl_tax = 1.337, 
                    excl_tax = 1.337, 
                    tax = 1.337, 
                    regular_price = order_capture_client.models.base_price.BasePrice(
                        incl_tax = 1.337, 
                        excl_tax = 1.337, 
                        tax = 1.337, 
                        tax_list = [
                            order_capture_client.models.tax.Tax(
                                tax_jurisdiction = order_capture_client.models.tax_jurisdiction.TaxJurisdiction(
                                    tax_jurisdiction_type = '', 
                                    tax_jurisdiction_code = '', ), 
                                type = '', 
                                code = '', 
                                tax_percentage = 1.337, 
                                tax_amount = 1.337, 
                                taxable_amount = 1.337, )
                            ], 
                        discount_list = [
                            order_capture_client.models.discount.Discount(
                                amount = 1.337, 
                                name = '', 
                                type = '', 
                                code = '', 
                                kind = '', 
                                discount_details = order_capture_client.models.discount_details.DiscountDetails(
                                    count = 56, 
                                    amount = 1.337, 
                                    value = 1.337, 
                                    max_discount_amount = 1.337, 
                                    type = '', 
                                    apply_on = '', ), 
                                id = '', 
                                sequence = 56, 
                                description = '', 
                                discount_type = '', 
                                discount_level = '', 
                                valid_from_date = '', 
                                valid_to_date = '', 
                                applied = True, )
                            ], 
                        discount_summary = order_capture_client.models.discount_summary.DiscountSummary(
                            all = 1.337, 
                            discounts = 1.337, 
                            family_price = 1.337, 
                            promotions = 1.337, 
                            coupons = 1.337, 
                            employee = 1.337, 
                            family_promotions = 1.337, 
                            family_discounts = 1.337, 
                            family = 1.337, 
                            manual = 1.337, 
                            voucher = 1.337, ), 
                        order_discount_summary_list = [
                            order_capture_client.models.order_discount_summary.OrderDiscountSummary(
                                amount = 1.337, 
                                name = '', )
                            ], 
                        per_item_price = order_capture_client.models.item_price.ItemPrice(
                            incl_tax = 1.337, 
                            excl_tax = 1.337, 
                            tax = 1.337, 
                            valid_from = '', 
                            valid_to = '', ), 
                        per_item_sale_price = order_capture_client.models.item_price.ItemPrice(
                            incl_tax = 1.337, 
                            excl_tax = 1.337, 
                            tax = 1.337, 
                            valid_from = '', 
                            valid_to = '', ), 
                        tax_summary_list = [
                            order_capture_client.models.spe_tax_summary.SpeTaxSummary(
                                tax_type = '', 
                                total_tax_amount = 1.337, 
                                tax_percent = 1.337, )
                            ], 
                        price_excl_savings = order_capture_client.models.price_excl_savings.PriceExclSavings(
                            incl_tax = 1.337, 
                            excl_tax = 1.337, 
                            tax = 1.337, ), 
                        total_order_savings = 1.337, ), 
                    family_price = order_capture_client.models.base_price.BasePrice(
                        incl_tax = 1.337, 
                        excl_tax = 1.337, 
                        tax = 1.337, 
                        total_order_savings = 1.337, ), 
                    tax_list = [
                        order_capture_client.models.tax.Tax(
                            type = '', 
                            code = '', 
                            tax_percentage = 1.337, 
                            tax_amount = 1.337, 
                            taxable_amount = 1.337, )
                        ], 
                    currency_code = '', 
                    discount_list = [
                        order_capture_client.models.discount.Discount(
                            amount = 1.337, 
                            name = '', 
                            type = '', 
                            code = '', 
                            kind = '', 
                            id = '', 
                            sequence = 56, 
                            description = '', 
                            discount_type = '', 
                            discount_level = '', 
                            valid_from_date = '', 
                            valid_to_date = '', 
                            applied = True, )
                        ], 
                    order_discount_summary_list = [
                        order_capture_client.models.order_discount_summary.OrderDiscountSummary(
                            amount = 1.337, 
                            name = '', )
                        ], 
                    roll_up_price_type = 'FAMILY', 
                    tax_summary_list = [
                        order_capture_client.models.spe_tax_summary.SpeTaxSummary(
                            tax_type = '', 
                            total_tax_amount = 1.337, 
                            tax_percent = 1.337, )
                        ], 
                    discount_summary = order_capture_client.models.discount_summary.DiscountSummary(
                        all = 1.337, 
                        discounts = 1.337, 
                        promotions = 1.337, 
                        coupons = 1.337, 
                        employee = 1.337, 
                        family_promotions = 1.337, 
                        family_discounts = 1.337, 
                        family = 1.337, 
                        manual = 1.337, 
                        voucher = 1.337, ), 
                    price_excl_savings = order_capture_client.models.price_excl_savings.PriceExclSavings(
                        incl_tax = 1.337, 
                        excl_tax = 1.337, 
                        tax = 1.337, ), 
                    per_item_sale_price = , 
                    per_item_price = , 
                    total_order_savings = 1.337, 
                    additional_savings_as_family = 1.337, ),
                consumer_info = order_capture_client.models.consumer_info_dto.ConsumerInfoDto(
                    name = '', 
                    checkout_type = 'STANDARD', 
                    return_url = '', 
                    extra_info = {
                        'key' : ''
                        }, ),
                order_total = order_capture_client.models.price.Price(
                    type = 'TOTAL_PRICE', 
                    incl_tax = 1.337, 
                    excl_tax = 1.337, 
                    tax = 1.337, 
                    regular_price = order_capture_client.models.base_price.BasePrice(
                        incl_tax = 1.337, 
                        excl_tax = 1.337, 
                        tax = 1.337, 
                        tax_list = [
                            order_capture_client.models.tax.Tax(
                                tax_jurisdiction = order_capture_client.models.tax_jurisdiction.TaxJurisdiction(
                                    tax_jurisdiction_type = '', 
                                    tax_jurisdiction_code = '', ), 
                                type = '', 
                                code = '', 
                                tax_percentage = 1.337, 
                                tax_amount = 1.337, 
                                taxable_amount = 1.337, )
                            ], 
                        discount_list = [
                            order_capture_client.models.discount.Discount(
                                amount = 1.337, 
                                name = '', 
                                type = '', 
                                code = '', 
                                kind = '', 
                                discount_details = order_capture_client.models.discount_details.DiscountDetails(
                                    count = 56, 
                                    amount = 1.337, 
                                    value = 1.337, 
                                    max_discount_amount = 1.337, 
                                    type = '', 
                                    apply_on = '', ), 
                                id = '', 
                                sequence = 56, 
                                description = '', 
                                discount_type = '', 
                                discount_level = '', 
                                valid_from_date = '', 
                                valid_to_date = '', 
                                applied = True, )
                            ], 
                        discount_summary = order_capture_client.models.discount_summary.DiscountSummary(
                            all = 1.337, 
                            discounts = 1.337, 
                            family_price = 1.337, 
                            promotions = 1.337, 
                            coupons = 1.337, 
                            employee = 1.337, 
                            family_promotions = 1.337, 
                            family_discounts = 1.337, 
                            family = 1.337, 
                            manual = 1.337, 
                            voucher = 1.337, ), 
                        order_discount_summary_list = [
                            order_capture_client.models.order_discount_summary.OrderDiscountSummary(
                                amount = 1.337, 
                                name = '', )
                            ], 
                        per_item_price = order_capture_client.models.item_price.ItemPrice(
                            incl_tax = 1.337, 
                            excl_tax = 1.337, 
                            tax = 1.337, 
                            valid_from = '', 
                            valid_to = '', ), 
                        per_item_sale_price = order_capture_client.models.item_price.ItemPrice(
                            incl_tax = 1.337, 
                            excl_tax = 1.337, 
                            tax = 1.337, 
                            valid_from = '', 
                            valid_to = '', ), 
                        tax_summary_list = [
                            order_capture_client.models.spe_tax_summary.SpeTaxSummary(
                                tax_type = '', 
                                total_tax_amount = 1.337, 
                                tax_percent = 1.337, )
                            ], 
                        price_excl_savings = order_capture_client.models.price_excl_savings.PriceExclSavings(
                            incl_tax = 1.337, 
                            excl_tax = 1.337, 
                            tax = 1.337, ), 
                        total_order_savings = 1.337, ), 
                    family_price = order_capture_client.models.base_price.BasePrice(
                        incl_tax = 1.337, 
                        excl_tax = 1.337, 
                        tax = 1.337, 
                        total_order_savings = 1.337, ), 
                    tax_list = [
                        order_capture_client.models.tax.Tax(
                            type = '', 
                            code = '', 
                            tax_percentage = 1.337, 
                            tax_amount = 1.337, 
                            taxable_amount = 1.337, )
                        ], 
                    currency_code = '', 
                    discount_list = [
                        order_capture_client.models.discount.Discount(
                            amount = 1.337, 
                            name = '', 
                            type = '', 
                            code = '', 
                            kind = '', 
                            id = '', 
                            sequence = 56, 
                            description = '', 
                            discount_type = '', 
                            discount_level = '', 
                            valid_from_date = '', 
                            valid_to_date = '', 
                            applied = True, )
                        ], 
                    order_discount_summary_list = [
                        order_capture_client.models.order_discount_summary.OrderDiscountSummary(
                            amount = 1.337, 
                            name = '', )
                        ], 
                    roll_up_price_type = 'FAMILY', 
                    tax_summary_list = [
                        order_capture_client.models.spe_tax_summary.SpeTaxSummary(
                            tax_type = '', 
                            total_tax_amount = 1.337, 
                            tax_percent = 1.337, )
                        ], 
                    discount_summary = order_capture_client.models.discount_summary.DiscountSummary(
                        all = 1.337, 
                        discounts = 1.337, 
                        promotions = 1.337, 
                        coupons = 1.337, 
                        employee = 1.337, 
                        family_promotions = 1.337, 
                        family_discounts = 1.337, 
                        family = 1.337, 
                        manual = 1.337, 
                        voucher = 1.337, ), 
                    price_excl_savings = order_capture_client.models.price_excl_savings.PriceExclSavings(
                        incl_tax = 1.337, 
                        excl_tax = 1.337, 
                        tax = 1.337, ), 
                    per_item_sale_price = , 
                    per_item_price = , 
                    total_order_savings = 1.337, 
                    additional_savings_as_family = 1.337, ),
                items = [
                    order_capture_client.models.item_dto.ItemDto(
                        id = '', 
                        item_no = '', 
                        name = '', 
                        line_id = 56, 
                        type = 'ART', 
                        quantity = 56, 
                        quantity_type = 'METER', 
                        uom = '', 
                        total_price = order_capture_client.models.price.Price(
                            type = 'TOTAL_PRICE', 
                            incl_tax = 1.337, 
                            excl_tax = 1.337, 
                            tax = 1.337, 
                            regular_price = order_capture_client.models.base_price.BasePrice(
                                incl_tax = 1.337, 
                                excl_tax = 1.337, 
                                tax = 1.337, 
                                tax_list = [
                                    order_capture_client.models.tax.Tax(
                                        tax_jurisdiction = order_capture_client.models.tax_jurisdiction.TaxJurisdiction(
                                            tax_jurisdiction_type = '', 
                                            tax_jurisdiction_code = '', ), 
                                        type = '', 
                                        code = '', 
                                        tax_percentage = 1.337, 
                                        tax_amount = 1.337, 
                                        taxable_amount = 1.337, )
                                    ], 
                                discount_list = [
                                    order_capture_client.models.discount.Discount(
                                        amount = 1.337, 
                                        name = '', 
                                        type = '', 
                                        code = '', 
                                        kind = '', 
                                        discount_details = order_capture_client.models.discount_details.DiscountDetails(
                                            count = 56, 
                                            amount = 1.337, 
                                            value = 1.337, 
                                            max_discount_amount = 1.337, 
                                            type = '', 
                                            apply_on = '', ), 
                                        id = '', 
                                        sequence = 56, 
                                        description = '', 
                                        discount_type = '', 
                                        discount_level = '', 
                                        valid_from_date = '', 
                                        valid_to_date = '', 
                                        applied = True, )
                                    ], 
                                discount_summary = order_capture_client.models.discount_summary.DiscountSummary(
                                    all = 1.337, 
                                    discounts = 1.337, 
                                    family_price = 1.337, 
                                    promotions = 1.337, 
                                    coupons = 1.337, 
                                    employee = 1.337, 
                                    family_promotions = 1.337, 
                                    family_discounts = 1.337, 
                                    family = 1.337, 
                                    manual = 1.337, 
                                    voucher = 1.337, ), 
                                order_discount_summary_list = [
                                    order_capture_client.models.order_discount_summary.OrderDiscountSummary(
                                        amount = 1.337, 
                                        name = '', )
                                    ], 
                                per_item_price = order_capture_client.models.item_price.ItemPrice(
                                    incl_tax = 1.337, 
                                    excl_tax = 1.337, 
                                    tax = 1.337, 
                                    valid_from = '', 
                                    valid_to = '', ), 
                                per_item_sale_price = order_capture_client.models.item_price.ItemPrice(
                                    incl_tax = 1.337, 
                                    excl_tax = 1.337, 
                                    tax = 1.337, 
                                    valid_from = '', 
                                    valid_to = '', ), 
                                tax_summary_list = [
                                    order_capture_client.models.spe_tax_summary.SpeTaxSummary(
                                        tax_type = '', 
                                        total_tax_amount = 1.337, 
                                        tax_percent = 1.337, )
                                    ], 
                                price_excl_savings = order_capture_client.models.price_excl_savings.PriceExclSavings(
                                    incl_tax = 1.337, 
                                    excl_tax = 1.337, 
                                    tax = 1.337, ), 
                                total_order_savings = 1.337, ), 
                            family_price = order_capture_client.models.base_price.BasePrice(
                                incl_tax = 1.337, 
                                excl_tax = 1.337, 
                                tax = 1.337, 
                                total_order_savings = 1.337, ), 
                            tax_list = [
                                order_capture_client.models.tax.Tax(
                                    type = '', 
                                    code = '', 
                                    tax_percentage = 1.337, 
                                    tax_amount = 1.337, 
                                    taxable_amount = 1.337, )
                                ], 
                            currency_code = '', 
                            discount_list = [
                                order_capture_client.models.discount.Discount(
                                    amount = 1.337, 
                                    name = '', 
                                    type = '', 
                                    code = '', 
                                    kind = '', 
                                    id = '', 
                                    sequence = 56, 
                                    description = '', 
                                    discount_type = '', 
                                    discount_level = '', 
                                    valid_from_date = '', 
                                    valid_to_date = '', 
                                    applied = True, )
                                ], 
                            order_discount_summary_list = [
                                order_capture_client.models.order_discount_summary.OrderDiscountSummary(
                                    amount = 1.337, 
                                    name = '', )
                                ], 
                            roll_up_price_type = 'FAMILY', 
                            tax_summary_list = [
                                order_capture_client.models.spe_tax_summary.SpeTaxSummary(
                                    tax_type = '', 
                                    total_tax_amount = 1.337, 
                                    tax_percent = 1.337, )
                                ], 
                            discount_summary = order_capture_client.models.discount_summary.DiscountSummary(
                                all = 1.337, 
                                discounts = 1.337, 
                                promotions = 1.337, 
                                coupons = 1.337, 
                                employee = 1.337, 
                                family_promotions = 1.337, 
                                family_discounts = 1.337, 
                                family = 1.337, 
                                manual = 1.337, 
                                voucher = 1.337, ), 
                            price_excl_savings = order_capture_client.models.price_excl_savings.PriceExclSavings(
                                incl_tax = 1.337, 
                                excl_tax = 1.337, 
                                tax = 1.337, ), 
                            per_item_sale_price = , 
                            per_item_price = , 
                            total_order_savings = 1.337, 
                            additional_savings_as_family = 1.337, ), 
                        availability = order_capture_client.models.availability.Availability(
                            type = 'FULL', 
                            quantity = 1.337, 
                            unavailability_reason = 'NO_STOCK', ), 
                        fees = [
                            order_capture_client.models.fee.Fee(
                                fee_amount = 1.337, 
                                fee_type = 'WEEE', )
                            ], 
                        supported_delivery_method = 'TRUCK', 
                        external_ref_id = '', )
                    ],
                service_items = [
                    order_capture_client.models.service_item.ServiceItem(
                        line_id = '', 
                        service_item_no = '', 
                        service_product_id = '', 
                        price = order_capture_client.models.price.Price(
                            type = 'TOTAL_PRICE', 
                            incl_tax = 1.337, 
                            excl_tax = 1.337, 
                            tax = 1.337, 
                            regular_price = order_capture_client.models.base_price.BasePrice(
                                incl_tax = 1.337, 
                                excl_tax = 1.337, 
                                tax = 1.337, 
                                tax_list = [
                                    order_capture_client.models.tax.Tax(
                                        tax_jurisdiction = order_capture_client.models.tax_jurisdiction.TaxJurisdiction(
                                            tax_jurisdiction_type = '', 
                                            tax_jurisdiction_code = '', ), 
                                        type = '', 
                                        code = '', 
                                        tax_percentage = 1.337, 
                                        tax_amount = 1.337, 
                                        taxable_amount = 1.337, )
                                    ], 
                                discount_list = [
                                    order_capture_client.models.discount.Discount(
                                        amount = 1.337, 
                                        name = '', 
                                        type = '', 
                                        code = '', 
                                        kind = '', 
                                        discount_details = order_capture_client.models.discount_details.DiscountDetails(
                                            count = 56, 
                                            amount = 1.337, 
                                            value = 1.337, 
                                            max_discount_amount = 1.337, 
                                            type = '', 
                                            apply_on = '', ), 
                                        id = '', 
                                        sequence = 56, 
                                        description = '', 
                                        discount_type = '', 
                                        discount_level = '', 
                                        valid_from_date = '', 
                                        valid_to_date = '', 
                                        applied = True, )
                                    ], 
                                discount_summary = order_capture_client.models.discount_summary.DiscountSummary(
                                    all = 1.337, 
                                    discounts = 1.337, 
                                    family_price = 1.337, 
                                    promotions = 1.337, 
                                    coupons = 1.337, 
                                    employee = 1.337, 
                                    family_promotions = 1.337, 
                                    family_discounts = 1.337, 
                                    family = 1.337, 
                                    manual = 1.337, 
                                    voucher = 1.337, ), 
                                order_discount_summary_list = [
                                    order_capture_client.models.order_discount_summary.OrderDiscountSummary(
                                        amount = 1.337, 
                                        name = '', )
                                    ], 
                                per_item_price = order_capture_client.models.item_price.ItemPrice(
                                    incl_tax = 1.337, 
                                    excl_tax = 1.337, 
                                    tax = 1.337, 
                                    valid_from = '', 
                                    valid_to = '', ), 
                                per_item_sale_price = order_capture_client.models.item_price.ItemPrice(
                                    incl_tax = 1.337, 
                                    excl_tax = 1.337, 
                                    tax = 1.337, 
                                    valid_from = '', 
                                    valid_to = '', ), 
                                tax_summary_list = [
                                    order_capture_client.models.spe_tax_summary.SpeTaxSummary(
                                        tax_type = '', 
                                        total_tax_amount = 1.337, 
                                        tax_percent = 1.337, )
                                    ], 
                                price_excl_savings = order_capture_client.models.price_excl_savings.PriceExclSavings(
                                    incl_tax = 1.337, 
                                    excl_tax = 1.337, 
                                    tax = 1.337, ), 
                                total_order_savings = 1.337, ), 
                            family_price = order_capture_client.models.base_price.BasePrice(
                                incl_tax = 1.337, 
                                excl_tax = 1.337, 
                                tax = 1.337, 
                                total_order_savings = 1.337, ), 
                            tax_list = [
                                order_capture_client.models.tax.Tax(
                                    type = '', 
                                    code = '', 
                                    tax_percentage = 1.337, 
                                    tax_amount = 1.337, 
                                    taxable_amount = 1.337, )
                                ], 
                            currency_code = '', 
                            discount_list = [
                                order_capture_client.models.discount.Discount(
                                    amount = 1.337, 
                                    name = '', 
                                    type = '', 
                                    code = '', 
                                    kind = '', 
                                    id = '', 
                                    sequence = 56, 
                                    description = '', 
                                    discount_type = '', 
                                    discount_level = '', 
                                    valid_from_date = '', 
                                    valid_to_date = '', 
                                    applied = True, )
                                ], 
                            order_discount_summary_list = [
                                order_capture_client.models.order_discount_summary.OrderDiscountSummary(
                                    amount = 1.337, 
                                    name = '', )
                                ], 
                            roll_up_price_type = 'FAMILY', 
                            tax_summary_list = [
                                order_capture_client.models.spe_tax_summary.SpeTaxSummary(
                                    tax_type = '', 
                                    total_tax_amount = 1.337, 
                                    tax_percent = 1.337, )
                                ], 
                            discount_summary = order_capture_client.models.discount_summary.DiscountSummary(
                                all = 1.337, 
                                discounts = 1.337, 
                                promotions = 1.337, 
                                coupons = 1.337, 
                                employee = 1.337, 
                                family_promotions = 1.337, 
                                family_discounts = 1.337, 
                                family = 1.337, 
                                manual = 1.337, 
                                voucher = 1.337, ), 
                            price_excl_savings = order_capture_client.models.price_excl_savings.PriceExclSavings(
                                incl_tax = 1.337, 
                                excl_tax = 1.337, 
                                tax = 1.337, ), 
                            per_item_sale_price = , 
                            per_item_price = , 
                            total_order_savings = 1.337, 
                            additional_savings_as_family = 1.337, ), 
                        item_reference_list = [
                            order_capture_client.models.item_reference.ItemReference(
                                item_line_id = '', 
                                item_no = '', 
                                quantity = '', 
                                is_co_worker_assistance_needed = True, )
                            ], 
                        exceptional_scenario = order_capture_client.models.exceptional_scenario.ExceptionalScenario(
                            exception_code = '', 
                            exception_reason = '', ), 
                        price_calculation_value = 1.337, 
                        provider = '', 
                        taxation_info = '', 
                        pay_to_provider = True, )
                    ],
                removal_service_items = [
                    order_capture_client.models.removal_service_item.RemovalServiceItem(
                        line_id = '', 
                        service_item_no = '', 
                        service_product_id = '', 
                        price = order_capture_client.models.price.Price(
                            type = 'TOTAL_PRICE', 
                            incl_tax = 1.337, 
                            excl_tax = 1.337, 
                            tax = 1.337, 
                            regular_price = order_capture_client.models.base_price.BasePrice(
                                incl_tax = 1.337, 
                                excl_tax = 1.337, 
                                tax = 1.337, 
                                tax_list = [
                                    order_capture_client.models.tax.Tax(
                                        tax_jurisdiction = order_capture_client.models.tax_jurisdiction.TaxJurisdiction(
                                            tax_jurisdiction_type = '', 
                                            tax_jurisdiction_code = '', ), 
                                        type = '', 
                                        code = '', 
                                        tax_percentage = 1.337, 
                                        tax_amount = 1.337, 
                                        taxable_amount = 1.337, )
                                    ], 
                                discount_list = [
                                    order_capture_client.models.discount.Discount(
                                        amount = 1.337, 
                                        name = '', 
                                        type = '', 
                                        code = '', 
                                        kind = '', 
                                        discount_details = order_capture_client.models.discount_details.DiscountDetails(
                                            count = 56, 
                                            amount = 1.337, 
                                            value = 1.337, 
                                            max_discount_amount = 1.337, 
                                            type = '', 
                                            apply_on = '', ), 
                                        id = '', 
                                        sequence = 56, 
                                        description = '', 
                                        discount_type = '', 
                                        discount_level = '', 
                                        valid_from_date = '', 
                                        valid_to_date = '', 
                                        applied = True, )
                                    ], 
                                discount_summary = order_capture_client.models.discount_summary.DiscountSummary(
                                    all = 1.337, 
                                    discounts = 1.337, 
                                    family_price = 1.337, 
                                    promotions = 1.337, 
                                    coupons = 1.337, 
                                    employee = 1.337, 
                                    family_promotions = 1.337, 
                                    family_discounts = 1.337, 
                                    family = 1.337, 
                                    manual = 1.337, 
                                    voucher = 1.337, ), 
                                order_discount_summary_list = [
                                    order_capture_client.models.order_discount_summary.OrderDiscountSummary(
                                        amount = 1.337, 
                                        name = '', )
                                    ], 
                                per_item_price = order_capture_client.models.item_price.ItemPrice(
                                    incl_tax = 1.337, 
                                    excl_tax = 1.337, 
                                    tax = 1.337, 
                                    valid_from = '', 
                                    valid_to = '', ), 
                                per_item_sale_price = order_capture_client.models.item_price.ItemPrice(
                                    incl_tax = 1.337, 
                                    excl_tax = 1.337, 
                                    tax = 1.337, 
                                    valid_from = '', 
                                    valid_to = '', ), 
                                tax_summary_list = [
                                    order_capture_client.models.spe_tax_summary.SpeTaxSummary(
                                        tax_type = '', 
                                        total_tax_amount = 1.337, 
                                        tax_percent = 1.337, )
                                    ], 
                                price_excl_savings = order_capture_client.models.price_excl_savings.PriceExclSavings(
                                    incl_tax = 1.337, 
                                    excl_tax = 1.337, 
                                    tax = 1.337, ), 
                                total_order_savings = 1.337, ), 
                            family_price = order_capture_client.models.base_price.BasePrice(
                                incl_tax = 1.337, 
                                excl_tax = 1.337, 
                                tax = 1.337, 
                                total_order_savings = 1.337, ), 
                            tax_list = [
                                order_capture_client.models.tax.Tax(
                                    type = '', 
                                    code = '', 
                                    tax_percentage = 1.337, 
                                    tax_amount = 1.337, 
                                    taxable_amount = 1.337, )
                                ], 
                            currency_code = '', 
                            discount_list = [
                                order_capture_client.models.discount.Discount(
                                    amount = 1.337, 
                                    name = '', 
                                    type = '', 
                                    code = '', 
                                    kind = '', 
                                    id = '', 
                                    sequence = 56, 
                                    description = '', 
                                    discount_type = '', 
                                    discount_level = '', 
                                    valid_from_date = '', 
                                    valid_to_date = '', 
                                    applied = True, )
                                ], 
                            order_discount_summary_list = [
                                order_capture_client.models.order_discount_summary.OrderDiscountSummary(
                                    amount = 1.337, 
                                    name = '', )
                                ], 
                            roll_up_price_type = 'FAMILY', 
                            tax_summary_list = [
                                order_capture_client.models.spe_tax_summary.SpeTaxSummary(
                                    tax_type = '', 
                                    total_tax_amount = 1.337, 
                                    tax_percent = 1.337, )
                                ], 
                            discount_summary = order_capture_client.models.discount_summary.DiscountSummary(
                                all = 1.337, 
                                discounts = 1.337, 
                                promotions = 1.337, 
                                coupons = 1.337, 
                                employee = 1.337, 
                                family_promotions = 1.337, 
                                family_discounts = 1.337, 
                                family = 1.337, 
                                manual = 1.337, 
                                voucher = 1.337, ), 
                            price_excl_savings = order_capture_client.models.price_excl_savings.PriceExclSavings(
                                incl_tax = 1.337, 
                                excl_tax = 1.337, 
                                tax = 1.337, ), 
                            per_item_sale_price = , 
                            per_item_price = , 
                            total_order_savings = 1.337, 
                            additional_savings_as_family = 1.337, ), 
                        provider = '', 
                        quantity = 56, 
                        price_calculation_value = 1.337, 
                        taxation_info = '', 
                        removal_service_metadata = order_capture_client.models.removal_service_metadata.RemovalServiceMetadata(
                            reason_of_failure = '', 
                            is_service_available = True, ), 
                        pay_to_provider = True, )
                    ],
                billing_contacts = [
                    order_capture_client.models.billing_contact.BillingContact(
                        checkout_id = '', 
                        id = '', 
                        first_name = 'First', 
                        middle_name = 'First', 
                        last_name = 'Last', 
                        second_surname = 'Last', 
                        phonetic_first_name = 'First', 
                        phonetic_last_name = 'Last', 
                        city = 'Helsingborg', 
                        state = 'State', 
                        country = 'Sweden', 
                        county = 'Skane', 
                        address_line1 = 'Address', 
                        address_line2 = 'Address', 
                        address_line3 = 'Address', 
                        land_line_number = '+46707938475', 
                        fax_number = '+46707938475', 
                        state_code = 'PR', 
                        fiscal_code = 'MLN45266378', 
                        tax_code = '42356343', 
                        tax_code_type = 'VAT', 
                        recipient_code_type = 'EMAIL', 
                        recipient_code = 'abc@checkout.co', 
                        country_of_origin = 'Sweden', 
                        email = 'ordercapture@email.com', 
                        alternate_collector_first_name = 'First', 
                        alternate_collector_sur_name = 'Last', 
                        same_as_shipping_contact = True, 
                        mobile_number = '+46707938475', 
                        zip_code = '25185', 
                        business_info = order_capture_client.models.business_info.BusinessInfo(
                            business_name = 'IKEA', 
                            phonetic_business_name = 'IKEA', 
                            organization_number = '12345', 
                            tax_identifier_no = '12345', 
                            tax_code = '42356343', 
                            tax_code_type = 'VAT', ), )
                    ],
                shipping_contacts = [
                    order_capture_client.models.shipping_contact.ShippingContact(
                        checkout_id = '', 
                        id = '', 
                        first_name = 'First', 
                        middle_name = 'First', 
                        last_name = 'Last', 
                        second_surname = 'Last', 
                        phonetic_first_name = 'First', 
                        phonetic_last_name = 'Last', 
                        city = 'Helsingborg', 
                        state = 'State', 
                        country = 'Sweden', 
                        county = 'Skane', 
                        address_line1 = 'Address', 
                        address_line2 = 'Address', 
                        address_line3 = 'Address', 
                        land_line_number = '+46707938475', 
                        fax_number = '+46707938475', 
                        state_code = 'PR', 
                        fiscal_code = 'MLN45266378', 
                        tax_code = '42356343', 
                        tax_code_type = 'VAT', 
                        recipient_code_type = 'EMAIL', 
                        recipient_code = 'abc@checkout.co', 
                        country_of_origin = 'Sweden', 
                        email = 'ordercapture@email.com', 
                        zip_code = '25185', 
                        mobile_number = '+46707938475', )
                    ],
                payment = order_capture_client.models.payment.Payment(
                    checkout_id = '', 
                    user_id = '', 
                    timestamp = '', 
                    payment_context_id = 'b14289e8-6994-4896-875c-6442d619b994', 
                    status = 'COMPLETED', 
                    amount_left_to_pay = 1.337, 
                    currency = 'SEK', 
                    order_hash = '', 
                    credit_card_transactions = [
                        order_capture_client.models.credit_card_transaction.CreditCardTransaction(
                            amount = 45.67, 
                            currency = 'SEK', 
                            status = 'CAPTURED ', 
                            iopg_id = 'EU123456789', 
                            psp_reference_id = 'xxcxcxcxcsdsdsdsdsdsd', 
                            psp_timestamp = '2017-05-11 07:04:43+0000', 
                            psp_transaction_date_time_utc = '2022-02-03T07:50:07Z', 
                            psp_name = 'ACI', 
                            authorisation_code = '123456678', 
                            payment_brand = order_capture_client.models.payment_brand.PaymentBrand(
                                name = 'MASTERCARD', 
                                psp_brand_name = 'MASTERCARD', 
                                tender_type = 'EBANKING', 
                                icon = 'http://images.ikea.com/payments/icon/visa', 
                                icons = [
                                    ''
                                    ], ), 
                            payment_card_details = order_capture_client.models.payment_card_details.PaymentCardDetails(
                                bin = '', 
                                last4_digits = '', 
                                expiry_month = '', 
                                expiry_year = '', ), 
                            decline_reason = 'UNKNOWN', )
                        ], 
                    prepaid_card_transactions = [
                        order_capture_client.models.prepaid_card_transaction.PrepaidCardTransaction(
                            amount = 45.67, 
                            balance_amount = 1.337, 
                            currency = 'SEK', 
                            balance_currency = '', 
                            status = 'CAPTURED ', 
                            iopg_id = 'EU123456789', 
                            psp_reference_id = 'xxcxcxcxcsdsdsdsdsdsd', 
                            psp_timestamp = '2017-05-11 07:04:43+0000', 
                            psp_transaction_date_time_utc = '2022-02-03T07:50:07Z', 
                            psp_name = 'ACI', )
                        ], 
                    business_credit_transactions = [
                        order_capture_client.models.business_credit_transaction.BusinessCreditTransaction(
                            amount = 45.67, 
                            purchase_order_number = '', 
                            currency = 'SEK', 
                            status = 'CAPTURED ', 
                            iopg_id = 'EU123456789', 
                            psp_reference_id = 'xxcxcxcxcsdsdsdsdsdsd', 
                            authorisation_code = '123456678', 
                            psp_timestamp = '2017-05-11 07:04:43+0000', 
                            psp_transaction_date_time_utc = '2022-02-03T07:50:07Z', 
                            psp_name = 'ACI', 
                            decline_reason = 'UNKNOWN', 
                            account_number = '12345678989', 
                            account_number_source = 'RIMS', )
                        ], 
                    open_invoice_transactions = [
                        order_capture_client.models.open_invoice_transaction.OpenInvoiceTransaction(
                            amount = 1.337, 
                            currency = '', 
                            status = '', 
                            iopg_id = '', 
                            psp_reference_id = '', 
                            psp_timestamp = '', 
                            psp_transaction_date_time_utc = '', 
                            psp_name = '', 
                            decline_reason = '', 
                            authorization_expiry_date = '', )
                        ], 
                    wallet_transactions = [
                        order_capture_client.models.wallet_transaction.WalletTransaction(
                            amount = 45.67, 
                            currency = 'SEK', 
                            status = 'CAPTURED ', 
                            iopg_id = 'EU123456789', 
                            psp_reference_id = 'xxcxcxcxcsdsdsdsdsdsd', 
                            psp_timestamp = '2017-05-11 07:04:43+0000', 
                            psp_transaction_date_time_utc = '2022-02-03T07:50:07Z', 
                            psp_name = 'ACI', 
                            authorisation_code = '123456678', 
                            decline_reason = 'UNKNOWN', )
                        ], 
                    online_transfer_transactions = [
                        order_capture_client.models.online_transfer_transaction.OnlineTransferTransaction(
                            amount = 45.67, 
                            currency = 'SEK', 
                            status = 'CAPTURED ', 
                            iopg_id = 'EU123456789', 
                            psp_reference_id = 'xxcxcxcxcsdsdsdsdsdsd', 
                            psp_timestamp = '2017-05-11 07:04:43+0000', 
                            psp_transaction_date_time_utc = '2022-02-03T07:50:07Z', 
                            psp_name = 'ACI', )
                        ], 
                    account_voucher_payment_transactions = [
                        order_capture_client.models.account_voucher_payment_transaction.AccountVoucherPaymentTransaction(
                            amount = 45.67, 
                            currency = 'SEK', 
                            status = 'CAPTURED ', 
                            iopg_id = 'EU123456789', 
                            psp_reference_id = 'xxcxcxcxcsdsdsdsdsdsd', 
                            psp_timestamp = '2017-05-11 07:04:43+0000', 
                            psp_transaction_date_time_utc = '2022-02-03T07:50:07Z', 
                            psp_name = 'ACI', 
                            reference = '972605053', 
                            expiry_date = '2020-08-19T21:40:33Z', 
                            entity_id = '23025', )
                        ], 
                    credit_application_transactions = [
                        order_capture_client.models.credit_application_transaction.CreditApplicationTransaction(
                            amount = 45.67, 
                            currency = 'SEK', 
                            status = 'CAPTURED ', 
                            iopg_id = 'EU123456789', 
                            psp_reference_id = 'xxcxcxcxcsdsdsdsdsdsd', 
                            psp_timestamp = '2017-05-11 07:04:43+0000', 
                            psp_transaction_date_time_utc = '2022-02-03T07:50:07Z', 
                            psp_name = 'ACI', 
                            decline_reason = 'UNKNOWN', 
                            product_type = '', 
                            application_due_date = '', 
                            payment_due_date = '', )
                        ], 
                    authenticated_amounts = [
                        order_capture_client.models.authenticated_amount.AuthenticatedAmount(
                            amount = 45.67, 
                            currency = 'SEK', 
                            status = 'ACCEPTED ', 
                            payment_gateway = 'IOPG, WORLDLINE', 
                            payment_gateway_reference_id = '', 
                            payment_system = 'IOPS, IPOS', 
                            customer_payment_id = '', 
                            created_date_time_utc = '2021-06-28T10:54:04Z', 
                            expiry_date_time_utc = '2021-06-28T10:54:04Z', 
                            payment_brand_name = 'VISA', 
                            last4_digits = '0010', 
                            is_also_authorized = True, )
                        ], 
                    pay_on_delivery = order_capture_client.models.pay_on_delivery.PayOnDelivery(
                        amount = 45.67, 
                        currency = 'SEK', ), 
                    pay_on_collect = order_capture_client.models.pay_on_collect.PayOnCollect(
                        amount = 1.337, 
                        currency = '', ), ),
                state = 'INITIATED',
                coupon = order_capture_client.models.coupon.Coupon(
                    coupon_id = '', 
                    failure_message = '', ),
                time_zone_id = '',
                selling_unit_type = '',
                selling_unit_code = '',
                coupon_info_list = [
                    order_capture_client.models.coupon_info.CouponInfo(
                        discount_code = '', 
                        discount_amount = 1.337, 
                        roll_up_price_type = 'FAMILY', 
                        text = '', 
                        coupon_metadata = order_capture_client.models.coupon_metadata.CouponMetadata(
                            is_coupon_valid = True, 
                            reason_of_failure = 'INVALID_COUPON', 
                            valid_customer_types = [
                                'PRIVATE'
                                ], ), )
                    ],
                spe_coupons = [
                    order_capture_client.models.spe_coupon.SpeCoupon(
                        discount_code = '', 
                        discount_amount = [
                            order_capture_client.models.spe_amount.SpeAmount(
                                view_type = '', 
                                amount = 1.337, )
                            ], 
                        info_messages = [
                            order_capture_client.models.spe_info_message.SpeInfoMessage(
                                view_type = '', 
                                message_id = '', 
                                message_text = '', )
                            ], 
                        texts = [
                            order_capture_client.models.spe_coupon_text.SpeCouponText(
                                lang_code = '', 
                                name = '', )
                            ], 
                        valid_customer_types = [
                            ''
                            ], 
                        service_discount = True, )
                    ],
                express_pay_context = order_capture_client.models.express_pay_context.ExpressPayContext(
                    timestamp = '', 
                    payment_context_id = '', 
                    payment_endpoint = '', 
                    checkout_id = '', 
                    redacted_address = order_capture_client.models.redacted_address.RedactedAddress(
                        redacted_zip_code = '', 
                        state_code = '', 
                        city = '', ), 
                    billing_contact = order_capture_client.models.billing_contact.BillingContact(
                        checkout_id = '', 
                        id = '', 
                        first_name = 'First', 
                        middle_name = 'First', 
                        last_name = 'Last', 
                        second_surname = 'Last', 
                        phonetic_first_name = 'First', 
                        phonetic_last_name = 'Last', 
                        city = 'Helsingborg', 
                        state = 'State', 
                        country = 'Sweden', 
                        county = 'Skane', 
                        address_line1 = 'Address', 
                        address_line2 = 'Address', 
                        address_line3 = 'Address', 
                        land_line_number = '+46707938475', 
                        fax_number = '+46707938475', 
                        state_code = 'PR', 
                        fiscal_code = 'MLN45266378', 
                        tax_code = '42356343', 
                        tax_code_type = 'VAT', 
                        recipient_code_type = 'EMAIL', 
                        recipient_code = 'abc@checkout.co', 
                        country_of_origin = 'Sweden', 
                        email = 'ordercapture@email.com', 
                        alternate_collector_first_name = 'First', 
                        alternate_collector_sur_name = 'Last', 
                        same_as_shipping_contact = True, 
                        mobile_number = '+46707938475', 
                        zip_code = '25185', 
                        business_info = order_capture_client.models.business_info.BusinessInfo(
                            business_name = 'IKEA', 
                            phonetic_business_name = 'IKEA', 
                            organization_number = '12345', 
                            tax_identifier_no = '12345', 
                            tax_code = '42356343', 
                            tax_code_type = 'VAT', ), ), 
                    shipping_contact = order_capture_client.models.shipping_contact.ShippingContact(
                        checkout_id = '', 
                        id = '', 
                        first_name = 'First', 
                        middle_name = 'First', 
                        last_name = 'Last', 
                        second_surname = 'Last', 
                        phonetic_first_name = 'First', 
                        phonetic_last_name = 'Last', 
                        city = 'Helsingborg', 
                        state = 'State', 
                        country = 'Sweden', 
                        county = 'Skane', 
                        address_line1 = 'Address', 
                        address_line2 = 'Address', 
                        address_line3 = 'Address', 
                        land_line_number = '+46707938475', 
                        fax_number = '+46707938475', 
                        state_code = 'PR', 
                        fiscal_code = 'MLN45266378', 
                        tax_code = '42356343', 
                        tax_code_type = 'VAT', 
                        recipient_code_type = 'EMAIL', 
                        recipient_code = 'abc@checkout.co', 
                        country_of_origin = 'Sweden', 
                        email = 'ordercapture@email.com', 
                        zip_code = '25185', 
                        mobile_number = '+46707938475', ), ),
                service_offers = [
                    order_capture_client.models.service_offer.ServiceOffer(
                        active = True, 
                        service_price = order_capture_client.models.price.Price(
                            type = 'TOTAL_PRICE', 
                            incl_tax = 1.337, 
                            excl_tax = 1.337, 
                            tax = 1.337, 
                            regular_price = order_capture_client.models.base_price.BasePrice(
                                incl_tax = 1.337, 
                                excl_tax = 1.337, 
                                tax = 1.337, 
                                tax_list = [
                                    order_capture_client.models.tax.Tax(
                                        tax_jurisdiction = order_capture_client.models.tax_jurisdiction.TaxJurisdiction(
                                            tax_jurisdiction_type = '', 
                                            tax_jurisdiction_code = '', ), 
                                        type = '', 
                                        code = '', 
                                        tax_percentage = 1.337, 
                                        tax_amount = 1.337, 
                                        taxable_amount = 1.337, )
                                    ], 
                                discount_list = [
                                    order_capture_client.models.discount.Discount(
                                        amount = 1.337, 
                                        name = '', 
                                        type = '', 
                                        code = '', 
                                        kind = '', 
                                        discount_details = order_capture_client.models.discount_details.DiscountDetails(
                                            count = 56, 
                                            amount = 1.337, 
                                            value = 1.337, 
                                            max_discount_amount = 1.337, 
                                            type = '', 
                                            apply_on = '', ), 
                                        id = '', 
                                        sequence = 56, 
                                        description = '', 
                                        discount_type = '', 
                                        discount_level = '', 
                                        valid_from_date = '', 
                                        valid_to_date = '', 
                                        applied = True, )
                                    ], 
                                discount_summary = order_capture_client.models.discount_summary.DiscountSummary(
                                    all = 1.337, 
                                    discounts = 1.337, 
                                    family_price = 1.337, 
                                    promotions = 1.337, 
                                    coupons = 1.337, 
                                    employee = 1.337, 
                                    family_promotions = 1.337, 
                                    family_discounts = 1.337, 
                                    family = 1.337, 
                                    manual = 1.337, 
                                    voucher = 1.337, ), 
                                order_discount_summary_list = [
                                    order_capture_client.models.order_discount_summary.OrderDiscountSummary(
                                        amount = 1.337, 
                                        name = '', )
                                    ], 
                                per_item_price = order_capture_client.models.item_price.ItemPrice(
                                    incl_tax = 1.337, 
                                    excl_tax = 1.337, 
                                    tax = 1.337, 
                                    valid_from = '', 
                                    valid_to = '', ), 
                                per_item_sale_price = order_capture_client.models.item_price.ItemPrice(
                                    incl_tax = 1.337, 
                                    excl_tax = 1.337, 
                                    tax = 1.337, 
                                    valid_from = '', 
                                    valid_to = '', ), 
                                tax_summary_list = [
                                    order_capture_client.models.spe_tax_summary.SpeTaxSummary(
                                        tax_type = '', 
                                        total_tax_amount = 1.337, 
                                        tax_percent = 1.337, )
                                    ], 
                                price_excl_savings = order_capture_client.models.price_excl_savings.PriceExclSavings(
                                    incl_tax = 1.337, 
                                    excl_tax = 1.337, 
                                    tax = 1.337, ), 
                                total_order_savings = 1.337, ), 
                            family_price = order_capture_client.models.base_price.BasePrice(
                                incl_tax = 1.337, 
                                excl_tax = 1.337, 
                                tax = 1.337, 
                                total_order_savings = 1.337, ), 
                            tax_list = [
                                order_capture_client.models.tax.Tax(
                                    type = '', 
                                    code = '', 
                                    tax_percentage = 1.337, 
                                    tax_amount = 1.337, 
                                    taxable_amount = 1.337, )
                                ], 
                            currency_code = '', 
                            discount_list = [
                                order_capture_client.models.discount.Discount(
                                    amount = 1.337, 
                                    name = '', 
                                    type = '', 
                                    code = '', 
                                    kind = '', 
                                    id = '', 
                                    sequence = 56, 
                                    description = '', 
                                    discount_type = '', 
                                    discount_level = '', 
                                    valid_from_date = '', 
                                    valid_to_date = '', 
                                    applied = True, )
                                ], 
                            order_discount_summary_list = [
                                order_capture_client.models.order_discount_summary.OrderDiscountSummary(
                                    amount = 1.337, 
                                    name = '', )
                                ], 
                            roll_up_price_type = 'FAMILY', 
                            tax_summary_list = [
                                order_capture_client.models.spe_tax_summary.SpeTaxSummary(
                                    tax_type = '', 
                                    total_tax_amount = 1.337, 
                                    tax_percent = 1.337, )
                                ], 
                            discount_summary = order_capture_client.models.discount_summary.DiscountSummary(
                                all = 1.337, 
                                discounts = 1.337, 
                                promotions = 1.337, 
                                coupons = 1.337, 
                                employee = 1.337, 
                                family_promotions = 1.337, 
                                family_discounts = 1.337, 
                                family = 1.337, 
                                manual = 1.337, 
                                voucher = 1.337, ), 
                            price_excl_savings = order_capture_client.models.price_excl_savings.PriceExclSavings(
                                incl_tax = 1.337, 
                                excl_tax = 1.337, 
                                tax = 1.337, ), 
                            per_item_sale_price = , 
                            per_item_price = , 
                            total_order_savings = 1.337, 
                            additional_savings_as_family = 1.337, ), 
                        inactive_reason = '', 
                        service_product_id = '', 
                        service_item_number = '', 
                        market_csc_enabled = True, 
                        provider = '', )
                    ],
                ebv_order = True,
                delivery_and_service_questionnaire_answers = order_capture_client.models.questions_and_answers.QuestionsAndAnswers(
                    checkout_id = '', 
                    user_id = '', 
                    questions_and_answers = order_capture_client.models.questions.Questions(
                        delivery_question = [
                            order_capture_client.models.question_set.QuestionSet(
                                service_id = 'SGR40000606', 
                                service_method = 'TRUCK', 
                                type = 'FLAT', 
                                questions = [
                                    order_capture_client.models.question.Question(
                                        reference = 'ADDITIONAL_INFO_TSP', 
                                        translated_reference = 'Delivery Restrictions? (e.g. Size of product, access to residence, parking restrictions, elevator availability etc.', 
                                        options = [
                                            order_capture_client.models.option.Option(
                                                option_value = 'true', 
                                                free_text_required = True, )
                                            ], 
                                        answer = order_capture_client.models.answer.Answer(
                                            option_value = 'true', 
                                            free_text = '', ), 
                                        regex = '', 
                                        mandatory = True, )
                                    ], 
                                service_id_service_relation_map = {
                                    'key' : order_capture_client.models.service_question_relation.ServiceQuestionRelation(
                                        service_method = 'TRUCK', 
                                        question_references = FLOOR_NO, TRUCK_RESTRICTIONS, )
                                    }, )
                            ], 
                        service_question = [
                            order_capture_client.models.question_set.QuestionSet(
                                service_id = 'SGR40000606', 
                                service_method = 'TRUCK', 
                                type = 'FLAT', )
                            ], ), ),
                use_sop_create_order = True,
                version = '',
                vpc_codes = [
                    ''
                    ],
                preliminary_address_info = order_capture_client.models.preliminary_address_info.PreliminaryAddressInfo(
                    address_line1 = '', 
                    address_line2 = '', 
                    address_line3 = '', 
                    city = '', 
                    zip_code = '', 
                    state_code = '', ),
                metadata = order_capture_client.models.metadata.Metadata(
                    is_price_recalculated = True, ),
                checkout_expiry_metadata = order_capture_client.models.checkout_expiry_metadata.CheckoutExpiryMetadata(
                    expiry_timestamp = '', 
                    time_left_to_expire_in_sec = 56, ),
                consents = [
                    ''
                    ],
                validation_rules = order_capture_client.models.validation_rules.ValidationRules(
                    is_tax_code_validation_required = True, )
            )
        else:
            return CheckoutDto(
                shopping_type = 'ONLINE',
        )
        """

    def testCheckoutDto(self):
        """Test CheckoutDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
