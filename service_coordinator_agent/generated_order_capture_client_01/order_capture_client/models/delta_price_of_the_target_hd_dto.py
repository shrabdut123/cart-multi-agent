# coding: utf-8

"""
    OrderCapture

    Order Capture Checkout API Definitions

    The version of the OpenAPI document: v2.0.8
    Contact: dl.order.capture.dev.se@ingka.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, Field, StrictStr
from typing import Any, ClassVar, Dict, List, Optional
from order_capture_client.models.delivery_time_windows_of_target_hd_dto import DeliveryTimeWindowsOfTargetHDDto
from typing import Optional, Set
from typing_extensions import Self

class DeltaPriceOfTheTargetHDDto(BaseModel):
    """
    It gives the calculated delta prices of the timewindow slots under target delivery
    """ # noqa: E501
    delivery_id: Optional[StrictStr] = Field(default=None, description="It represents the target delivery id for which we need to calculate the delta prices for", alias="deliveryId")
    fulfillment_delivery_id: Optional[StrictStr] = Field(default=None, description="It represents the target delivery fulfilment id for which we need to calculate the delta prices for", alias="fulfillmentDeliveryId")
    delivery_service_item_number: Optional[StrictStr] = Field(default=None, description="It represents the target delivery serviceItem number for which we need to calculate the delta prices for", alias="deliveryServiceItemNumber")
    delivery_tw_slots_of_target_delivery: Optional[DeliveryTimeWindowsOfTargetHDDto] = Field(default=None, alias="deliveryTWSlotsOfTargetDelivery")
    __properties: ClassVar[List[str]] = ["deliveryId", "fulfillmentDeliveryId", "deliveryServiceItemNumber", "deliveryTWSlotsOfTargetDelivery"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of DeltaPriceOfTheTargetHDDto from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        # override the default output from pydantic by calling `to_dict()` of delivery_tw_slots_of_target_delivery
        if self.delivery_tw_slots_of_target_delivery:
            _dict['deliveryTWSlotsOfTargetDelivery'] = self.delivery_tw_slots_of_target_delivery.to_dict()
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of DeltaPriceOfTheTargetHDDto from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "deliveryId": obj.get("deliveryId"),
            "fulfillmentDeliveryId": obj.get("fulfillmentDeliveryId"),
            "deliveryServiceItemNumber": obj.get("deliveryServiceItemNumber"),
            "deliveryTWSlotsOfTargetDelivery": DeliveryTimeWindowsOfTargetHDDto.from_dict(obj["deliveryTWSlotsOfTargetDelivery"]) if obj.get("deliveryTWSlotsOfTargetDelivery") is not None else None
        })
        return _obj


