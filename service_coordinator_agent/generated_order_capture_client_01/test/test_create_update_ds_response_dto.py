# coding: utf-8

"""
    OrderCapture

    Order Capture Checkout API Definitions

    The version of the OpenAPI document: v2.0.8
    Contact: dl.order.capture.dev.se@ingka.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from order_capture_client.models.create_update_ds_response_dto import CreateUpdateDSResponseDto

class TestCreateUpdateDSResponseDto(unittest.TestCase):
    """CreateUpdateDSResponseDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateUpdateDSResponseDto:
        """Test CreateUpdateDSResponseDto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateUpdateDSResponseDto`
        """
        model = CreateUpdateDSResponseDto()
        if include_optional:
            return CreateUpdateDSResponseDto(
                delivery_service = order_capture_client.models.delivery_service_entity.DeliveryServiceEntity(
                    id = '', 
                    delivery_arrangements_id = '', 
                    type = 'HOME_DELIVERY', 
                    fulfillment_method_type = 'HOME_DELIVERY', 
                    solution_id = '', 
                    solution = 'STANDARD', 
                    solution_price = order_capture_client.models.price.Price(
                        type = 'TOTAL_PRICE', 
                        incl_tax = 1.337, 
                        excl_tax = 1.337, 
                        tax = 1.337, 
                        regular_price = order_capture_client.models.base_price.BasePrice(
                            incl_tax = 1.337, 
                            excl_tax = 1.337, 
                            tax = 1.337, 
                            tax_list = [
                                order_capture_client.models.tax.Tax(
                                    tax_jurisdiction = order_capture_client.models.tax_jurisdiction.TaxJurisdiction(
                                        tax_jurisdiction_type = '', 
                                        tax_jurisdiction_code = '', ), 
                                    type = '', 
                                    code = '', 
                                    tax_percentage = 1.337, 
                                    tax_amount = 1.337, 
                                    taxable_amount = 1.337, )
                                ], 
                            discount_list = [
                                order_capture_client.models.discount.Discount(
                                    amount = 1.337, 
                                    name = '', 
                                    type = '', 
                                    code = '', 
                                    kind = '', 
                                    discount_details = order_capture_client.models.discount_details.DiscountDetails(
                                        count = 56, 
                                        amount = 1.337, 
                                        value = 1.337, 
                                        max_discount_amount = 1.337, 
                                        type = '', 
                                        apply_on = '', ), 
                                    id = '', 
                                    sequence = 56, 
                                    description = '', 
                                    discount_type = '', 
                                    discount_level = '', 
                                    valid_from_date = '', 
                                    valid_to_date = '', 
                                    applied = True, )
                                ], 
                            discount_summary = order_capture_client.models.discount_summary.DiscountSummary(
                                all = 1.337, 
                                discounts = 1.337, 
                                family_price = 1.337, 
                                promotions = 1.337, 
                                coupons = 1.337, 
                                employee = 1.337, 
                                family_promotions = 1.337, 
                                family_discounts = 1.337, 
                                family = 1.337, 
                                manual = 1.337, 
                                voucher = 1.337, ), 
                            order_discount_summary_list = [
                                order_capture_client.models.order_discount_summary.OrderDiscountSummary(
                                    amount = 1.337, 
                                    name = '', )
                                ], 
                            per_item_price = order_capture_client.models.item_price.ItemPrice(
                                incl_tax = 1.337, 
                                excl_tax = 1.337, 
                                tax = 1.337, 
                                valid_from = '', 
                                valid_to = '', ), 
                            per_item_sale_price = order_capture_client.models.item_price.ItemPrice(
                                incl_tax = 1.337, 
                                excl_tax = 1.337, 
                                tax = 1.337, 
                                valid_from = '', 
                                valid_to = '', ), 
                            tax_summary_list = [
                                order_capture_client.models.spe_tax_summary.SpeTaxSummary(
                                    tax_type = '', 
                                    total_tax_amount = 1.337, 
                                    tax_percent = 1.337, )
                                ], 
                            price_excl_savings = order_capture_client.models.price_excl_savings.PriceExclSavings(
                                incl_tax = 1.337, 
                                excl_tax = 1.337, 
                                tax = 1.337, ), 
                            total_order_savings = 1.337, ), 
                        family_price = order_capture_client.models.base_price.BasePrice(
                            incl_tax = 1.337, 
                            excl_tax = 1.337, 
                            tax = 1.337, 
                            total_order_savings = 1.337, ), 
                        tax_list = [
                            order_capture_client.models.tax.Tax(
                                type = '', 
                                code = '', 
                                tax_percentage = 1.337, 
                                tax_amount = 1.337, 
                                taxable_amount = 1.337, )
                            ], 
                        currency_code = '', 
                        discount_list = [
                            order_capture_client.models.discount.Discount(
                                amount = 1.337, 
                                name = '', 
                                type = '', 
                                code = '', 
                                kind = '', 
                                id = '', 
                                sequence = 56, 
                                description = '', 
                                discount_type = '', 
                                discount_level = '', 
                                valid_from_date = '', 
                                valid_to_date = '', 
                                applied = True, )
                            ], 
                        order_discount_summary_list = [
                            order_capture_client.models.order_discount_summary.OrderDiscountSummary(
                                amount = 1.337, 
                                name = '', )
                            ], 
                        roll_up_price_type = 'FAMILY', 
                        tax_summary_list = [
                            order_capture_client.models.spe_tax_summary.SpeTaxSummary(
                                tax_type = '', 
                                total_tax_amount = 1.337, 
                                tax_percent = 1.337, )
                            ], 
                        discount_summary = order_capture_client.models.discount_summary.DiscountSummary(
                            all = 1.337, 
                            discounts = 1.337, 
                            promotions = 1.337, 
                            coupons = 1.337, 
                            employee = 1.337, 
                            family_promotions = 1.337, 
                            family_discounts = 1.337, 
                            family = 1.337, 
                            manual = 1.337, 
                            voucher = 1.337, ), 
                        price_excl_savings = order_capture_client.models.price_excl_savings.PriceExclSavings(
                            incl_tax = 1.337, 
                            excl_tax = 1.337, 
                            tax = 1.337, ), 
                        per_item_sale_price = , 
                        per_item_price = , 
                        total_order_savings = 1.337, 
                        additional_savings_as_family = 1.337, ), 
                    price_override_reference = 1.337, 
                    expiry_time = '', 
                    deliveries = [
                        order_capture_client.models.delivery_entity.DeliveryEntity(
                            id = '', 
                            fulfillment_delivery_id = '', 
                            service_item_id = '', 
                            range_of_days = True, 
                            ship_node = '', 
                            merge_node_list = '', 
                            type = 'TRUCK', 
                            unit_of_measure = '', 
                            delivery_price = order_capture_client.models.price.Price(
                                type = 'TOTAL_PRICE', 
                                incl_tax = 1.337, 
                                excl_tax = 1.337, 
                                tax = 1.337, 
                                currency_code = '', 
                                roll_up_price_type = 'FAMILY', 
                                total_order_savings = 1.337, 
                                additional_savings_as_family = 1.337, ), 
                            price_override_reference = 1.337, 
                            delivery_items = [
                                order_capture_client.models.delivery_item.DeliveryItem(
                                    id = '', 
                                    item_id = '', 
                                    parent_id = '', 
                                    item_no = '', 
                                    item_type = '', 
                                    quantity = 1.337, 
                                    ship_node = '', 
                                    exceptional_qty = True, 
                                    external_ref_id = '', )
                                ], 
                            selected_pick_up_point = order_capture_client.models.pick_up_point_entity.PickUpPointEntity(
                                oc_pupid = '', 
                                id = '', 
                                name = '', 
                                identifier = '', 
                                lsc = '', 
                                latitude = '', 
                                longitude = '', 
                                opening_hours_mon_time = '', 
                                opening_hours_tue_time = '', 
                                opening_hours_wed_time = '', 
                                opening_hours_thu_time = '', 
                                opening_hours_fri_time = '', 
                                opening_hours_sat_time = '', 
                                opening_hours_sun_time = '', 
                                country = '', 
                                zip_code = '', 
                                city = '', 
                                state = '', 
                                address_line1 = '', 
                                address_line2 = '', 
                                address_line3 = '', 
                                address_line4 = '', 
                                distance = 1.337, ), 
                            selected_slot = order_capture_client.models.delivery_slot.DeliverySlot(
                                metadata = order_capture_client.models.delivery_slot_metadata.DeliverySlotMetadata(
                                    time_zone = '', 
                                    has_price_deviation = True, ), 
                                id = '', 
                                from_date_time = '', 
                                to_date_time = '', 
                                node = '', 
                                resource_pool_id = '', 
                                tsp_id = '', 
                                tsp_name = '', 
                                slot_attribute_group = '', 
                                capability = [
                                    order_capture_client.models.delivery_slot_capability.DeliverySlotCapability(
                                        type = '', 
                                        selected = True, )
                                    ], 
                                price = order_capture_client.models.slot_price.SlotPrice(
                                    incl_tax = 1.337, 
                                    excl_tax = 1.337, ), ), 
                            taxation_info = '', 
                            is_exceptional_qty = True, 
                            is_exceptional_volume = True, )
                        ], 
                    wheel_chair_capability = True, ),
                services_and_time_windows = [
                    order_capture_client.models.service_and_time_windows_entity.ServiceAndTimeWindowsEntity(
                        service_item_no = '', 
                        so_method = '', 
                        service_id = '', 
                        service_type = '', 
                        capacity_unit = '', 
                        selected_slot = order_capture_client.models.service_slot.ServiceSlot(
                            metadata = order_capture_client.models.service_slot_metadata.ServiceSlotMetadata(
                                time_zone = '', 
                                payment_type = '', 
                                service_provider_id = '', 
                                service_provider_name = '', 
                                show_end_date = True, ), 
                            id = '', 
                            from_date_time = '', 
                            to_date_time = '', 
                            from_date_time_utc = '', 
                            to_date_time_utc = '', 
                            price = 1.337, 
                            capacity_allocated = '', 
                            span_slots = [
                                order_capture_client.models.service_span_slot.ServiceSpanSlot(
                                    id = '', 
                                    from_date_time = '', 
                                    to_date_time = '', 
                                    from_date_time_utc = '', 
                                    to_date_time_utc = '', 
                                    price = 1.337, 
                                    capacity_allocated = '', )
                                ], ), 
                        price = order_capture_client.models.price.Price(
                            type = 'TOTAL_PRICE', 
                            incl_tax = 1.337, 
                            excl_tax = 1.337, 
                            tax = 1.337, 
                            regular_price = order_capture_client.models.base_price.BasePrice(
                                incl_tax = 1.337, 
                                excl_tax = 1.337, 
                                tax = 1.337, 
                                tax_list = [
                                    order_capture_client.models.tax.Tax(
                                        tax_jurisdiction = order_capture_client.models.tax_jurisdiction.TaxJurisdiction(
                                            tax_jurisdiction_type = '', 
                                            tax_jurisdiction_code = '', ), 
                                        type = '', 
                                        code = '', 
                                        tax_percentage = 1.337, 
                                        tax_amount = 1.337, 
                                        taxable_amount = 1.337, )
                                    ], 
                                discount_list = [
                                    order_capture_client.models.discount.Discount(
                                        amount = 1.337, 
                                        name = '', 
                                        type = '', 
                                        code = '', 
                                        kind = '', 
                                        discount_details = order_capture_client.models.discount_details.DiscountDetails(
                                            count = 56, 
                                            amount = 1.337, 
                                            value = 1.337, 
                                            max_discount_amount = 1.337, 
                                            type = '', 
                                            apply_on = '', ), 
                                        id = '', 
                                        sequence = 56, 
                                        description = '', 
                                        discount_type = '', 
                                        discount_level = '', 
                                        valid_from_date = '', 
                                        valid_to_date = '', 
                                        applied = True, )
                                    ], 
                                discount_summary = order_capture_client.models.discount_summary.DiscountSummary(
                                    all = 1.337, 
                                    discounts = 1.337, 
                                    family_price = 1.337, 
                                    promotions = 1.337, 
                                    coupons = 1.337, 
                                    employee = 1.337, 
                                    family_promotions = 1.337, 
                                    family_discounts = 1.337, 
                                    family = 1.337, 
                                    manual = 1.337, 
                                    voucher = 1.337, ), 
                                order_discount_summary_list = [
                                    order_capture_client.models.order_discount_summary.OrderDiscountSummary(
                                        amount = 1.337, 
                                        name = '', )
                                    ], 
                                per_item_price = order_capture_client.models.item_price.ItemPrice(
                                    incl_tax = 1.337, 
                                    excl_tax = 1.337, 
                                    tax = 1.337, 
                                    valid_from = '', 
                                    valid_to = '', ), 
                                per_item_sale_price = order_capture_client.models.item_price.ItemPrice(
                                    incl_tax = 1.337, 
                                    excl_tax = 1.337, 
                                    tax = 1.337, 
                                    valid_from = '', 
                                    valid_to = '', ), 
                                tax_summary_list = [
                                    order_capture_client.models.spe_tax_summary.SpeTaxSummary(
                                        tax_type = '', 
                                        total_tax_amount = 1.337, 
                                        tax_percent = 1.337, )
                                    ], 
                                price_excl_savings = order_capture_client.models.price_excl_savings.PriceExclSavings(
                                    incl_tax = 1.337, 
                                    excl_tax = 1.337, 
                                    tax = 1.337, ), 
                                total_order_savings = 1.337, ), 
                            family_price = order_capture_client.models.base_price.BasePrice(
                                incl_tax = 1.337, 
                                excl_tax = 1.337, 
                                tax = 1.337, 
                                total_order_savings = 1.337, ), 
                            tax_list = [
                                order_capture_client.models.tax.Tax(
                                    type = '', 
                                    code = '', 
                                    tax_percentage = 1.337, 
                                    tax_amount = 1.337, 
                                    taxable_amount = 1.337, )
                                ], 
                            currency_code = '', 
                            discount_list = [
                                order_capture_client.models.discount.Discount(
                                    amount = 1.337, 
                                    name = '', 
                                    type = '', 
                                    code = '', 
                                    kind = '', 
                                    id = '', 
                                    sequence = 56, 
                                    description = '', 
                                    discount_type = '', 
                                    discount_level = '', 
                                    valid_from_date = '', 
                                    valid_to_date = '', 
                                    applied = True, )
                                ], 
                            order_discount_summary_list = [
                                order_capture_client.models.order_discount_summary.OrderDiscountSummary(
                                    amount = 1.337, 
                                    name = '', )
                                ], 
                            roll_up_price_type = 'FAMILY', 
                            tax_summary_list = [
                                order_capture_client.models.spe_tax_summary.SpeTaxSummary(
                                    tax_type = '', 
                                    total_tax_amount = 1.337, 
                                    tax_percent = 1.337, )
                                ], 
                            discount_summary = order_capture_client.models.discount_summary.DiscountSummary(
                                all = 1.337, 
                                discounts = 1.337, 
                                promotions = 1.337, 
                                coupons = 1.337, 
                                employee = 1.337, 
                                family_promotions = 1.337, 
                                family_discounts = 1.337, 
                                family = 1.337, 
                                manual = 1.337, 
                                voucher = 1.337, ), 
                            price_excl_savings = order_capture_client.models.price_excl_savings.PriceExclSavings(
                                incl_tax = 1.337, 
                                excl_tax = 1.337, 
                                tax = 1.337, ), 
                            per_item_sale_price = , 
                            per_item_price = , 
                            total_order_savings = 1.337, 
                            additional_savings_as_family = 1.337, ), )
                    ],
                order_capture_state = order_capture_client.models.order_capture_state_dto.OrderCaptureStateDto(
                    shipping_price = order_capture_client.models.price.Price(
                        type = 'TOTAL_PRICE', 
                        incl_tax = 1.337, 
                        excl_tax = 1.337, 
                        tax = 1.337, 
                        regular_price = order_capture_client.models.base_price.BasePrice(
                            incl_tax = 1.337, 
                            excl_tax = 1.337, 
                            tax = 1.337, 
                            tax_list = [
                                order_capture_client.models.tax.Tax(
                                    tax_jurisdiction = order_capture_client.models.tax_jurisdiction.TaxJurisdiction(
                                        tax_jurisdiction_type = '', 
                                        tax_jurisdiction_code = '', ), 
                                    type = '', 
                                    code = '', 
                                    tax_percentage = 1.337, 
                                    tax_amount = 1.337, 
                                    taxable_amount = 1.337, )
                                ], 
                            discount_list = [
                                order_capture_client.models.discount.Discount(
                                    amount = 1.337, 
                                    name = '', 
                                    type = '', 
                                    code = '', 
                                    kind = '', 
                                    discount_details = order_capture_client.models.discount_details.DiscountDetails(
                                        count = 56, 
                                        amount = 1.337, 
                                        value = 1.337, 
                                        max_discount_amount = 1.337, 
                                        type = '', 
                                        apply_on = '', ), 
                                    id = '', 
                                    sequence = 56, 
                                    description = '', 
                                    discount_type = '', 
                                    discount_level = '', 
                                    valid_from_date = '', 
                                    valid_to_date = '', 
                                    applied = True, )
                                ], 
                            discount_summary = order_capture_client.models.discount_summary.DiscountSummary(
                                all = 1.337, 
                                discounts = 1.337, 
                                family_price = 1.337, 
                                promotions = 1.337, 
                                coupons = 1.337, 
                                employee = 1.337, 
                                family_promotions = 1.337, 
                                family_discounts = 1.337, 
                                family = 1.337, 
                                manual = 1.337, 
                                voucher = 1.337, ), 
                            order_discount_summary_list = [
                                order_capture_client.models.order_discount_summary.OrderDiscountSummary(
                                    amount = 1.337, 
                                    name = '', )
                                ], 
                            per_item_price = order_capture_client.models.item_price.ItemPrice(
                                incl_tax = 1.337, 
                                excl_tax = 1.337, 
                                tax = 1.337, 
                                valid_from = '', 
                                valid_to = '', ), 
                            per_item_sale_price = order_capture_client.models.item_price.ItemPrice(
                                incl_tax = 1.337, 
                                excl_tax = 1.337, 
                                tax = 1.337, 
                                valid_from = '', 
                                valid_to = '', ), 
                            tax_summary_list = [
                                order_capture_client.models.spe_tax_summary.SpeTaxSummary(
                                    tax_type = '', 
                                    total_tax_amount = 1.337, 
                                    tax_percent = 1.337, )
                                ], 
                            price_excl_savings = order_capture_client.models.price_excl_savings.PriceExclSavings(
                                incl_tax = 1.337, 
                                excl_tax = 1.337, 
                                tax = 1.337, ), 
                            total_order_savings = 1.337, ), 
                        family_price = order_capture_client.models.base_price.BasePrice(
                            incl_tax = 1.337, 
                            excl_tax = 1.337, 
                            tax = 1.337, 
                            total_order_savings = 1.337, ), 
                        tax_list = [
                            order_capture_client.models.tax.Tax(
                                type = '', 
                                code = '', 
                                tax_percentage = 1.337, 
                                tax_amount = 1.337, 
                                taxable_amount = 1.337, )
                            ], 
                        currency_code = '', 
                        discount_list = [
                            order_capture_client.models.discount.Discount(
                                amount = 1.337, 
                                name = '', 
                                type = '', 
                                code = '', 
                                kind = '', 
                                id = '', 
                                sequence = 56, 
                                description = '', 
                                discount_type = '', 
                                discount_level = '', 
                                valid_from_date = '', 
                                valid_to_date = '', 
                                applied = True, )
                            ], 
                        order_discount_summary_list = [
                            order_capture_client.models.order_discount_summary.OrderDiscountSummary(
                                amount = 1.337, 
                                name = '', )
                            ], 
                        roll_up_price_type = 'FAMILY', 
                        tax_summary_list = [
                            order_capture_client.models.spe_tax_summary.SpeTaxSummary(
                                tax_type = '', 
                                total_tax_amount = 1.337, 
                                tax_percent = 1.337, )
                            ], 
                        discount_summary = order_capture_client.models.discount_summary.DiscountSummary(
                            all = 1.337, 
                            discounts = 1.337, 
                            promotions = 1.337, 
                            coupons = 1.337, 
                            employee = 1.337, 
                            family_promotions = 1.337, 
                            family_discounts = 1.337, 
                            family = 1.337, 
                            manual = 1.337, 
                            voucher = 1.337, ), 
                        price_excl_savings = order_capture_client.models.price_excl_savings.PriceExclSavings(
                            incl_tax = 1.337, 
                            excl_tax = 1.337, 
                            tax = 1.337, ), 
                        per_item_sale_price = , 
                        per_item_price = , 
                        total_order_savings = 1.337, 
                        additional_savings_as_family = 1.337, ), 
                    service_price = order_capture_client.models.price.Price(
                        type = 'TOTAL_PRICE', 
                        incl_tax = 1.337, 
                        excl_tax = 1.337, 
                        tax = 1.337, 
                        currency_code = '', 
                        roll_up_price_type = 'FAMILY', 
                        total_order_savings = 1.337, 
                        additional_savings_as_family = 1.337, ), 
                    goods_total = , 
                    order_total = , 
                    state = 'INITIATED', 
                    service_offers = [
                        order_capture_client.models.service_offer.ServiceOffer(
                            active = True, 
                            inactive_reason = '', 
                            service_product_id = '', 
                            service_item_number = '', 
                            market_csc_enabled = True, 
                            provider = '', )
                        ], ),
                error = order_capture_client.models.error_dto.ErrorDto(
                    type = 'INTEGRATION_APP_ERROR', 
                    service = 'DELIVERY_ARRANGEMENTS', 
                    solution_id = 'PUP~1~STANDARD', 
                    pick_up_point_data = PUP1, PUP2, 
                    error_detail = order_capture_client.models.error_detail_dto.ErrorDetailDto(
                        error_code = 'EXTN_SOMOP_0022', 
                        error_description = 'Truck articles and DDC articles not eligible for Lockers', 
                        error_unique_exception_id = '10.59.11.2016260994287620000000044576', ), )
            )
        else:
            return CreateUpdateDSResponseDto(
        )
        """

    def testCreateUpdateDSResponseDto(self):
        """Test CreateUpdateDSResponseDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
