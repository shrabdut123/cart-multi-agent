# coding: utf-8

"""
    OrderCapture

    Order Capture Checkout API Definitions

    The version of the OpenAPI document: v2.0.8
    Contact: dl.order.capture.dev.se@ingka.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from order_capture_client.models.checkout_request import CheckoutRequest

class TestCheckoutRequest(unittest.TestCase):
    """CheckoutRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CheckoutRequest:
        """Test CheckoutRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CheckoutRequest`
        """
        model = CheckoutRequest()
        if include_optional:
            return CheckoutRequest(
                shopping_type = 'ONLINE',
                channel = 'WEBAPP',
                shopping_app_platform = 'WEB_BROWSER',
                family_card_no = '1233645878937646',
                apply_employee_discount = True,
                profile_type = 'REGULAR',
                delivery_area = order_capture_client.models.delivery_area_request.DeliveryAreaRequest(
                    id = '', 
                    zip_code = '25185', 
                    state_code = 'PR', 
                    city = 'Helsingborg', 
                    enable_range_of_days = False, ),
                service_area = order_capture_client.models.service_area_request.ServiceAreaRequest(
                    zip_code = '25185', 
                    state_code = 'PR', 
                    city = 'Helsingborg', 
                    delivery_country_code = 'LU', ),
                cart_check_sum = 'fdsgoiu98739q8u',
                language_code = 'en',
                consumer_info = order_capture_client.models.consumer_info.ConsumerInfo(
                    name = '', 
                    checkout_type = 'STANDARD', 
                    return_url = '', 
                    extra_info = {
                        'key' : ''
                        }, ),
                items = [
                    order_capture_client.models.item_request.ItemRequest(
                        item_no = '10098949', 
                        quantity = 1, 
                        uom = 'PIECE', 
                        group = 'DEFAULT', 
                        shopping_profile = 'ONLINE', 
                        external_ref_id = '5', )
                    ],
                service_items = [
                    order_capture_client.models.service_item_request.ServiceItemRequest(
                        service_item_no = '', 
                        service_product_id = '', 
                        provider = '', 
                        pay_to_provider = True, 
                        item_reference_list = [
                            order_capture_client.models.item_reference_request.ItemReferenceRequest(
                                item_no = '', 
                                quantity = '', 
                                is_co_worker_assistance_needed = True, )
                            ], 
                        exceptional_scenario = order_capture_client.models.exceptional_scenario.ExceptionalScenario(
                            exception_code = '', 
                            exception_reason = '', ), )
                    ],
                removal_service_items = [
                    order_capture_client.models.removal_service_item_request.RemovalServiceItemRequest(
                        service_item_no = '', 
                        service_product_id = '', 
                        provider = '', 
                        pay_to_provider = True, 
                        quantity = '', )
                    ],
                coupon = order_capture_client.models.coupon_request.CouponRequest(
                    coupon_id = 'A23gd653gfte534', ),
                preliminary_address_info = order_capture_client.models.preliminary_address_info_request.PreliminaryAddressInfoRequest(
                    address_line1 = '', 
                    address_line2 = '', 
                    address_line3 = '', 
                    city = '', 
                    zip_code = '', 
                    state_code = '', ),
                shipping_contacts = [
                    order_capture_client.models.shipping_contact_request.ShippingContactRequest(
                        checkout_id = '', 
                        id = '', 
                        first_name = 'First', 
                        middle_name = 'First', 
                        last_name = 'Last', 
                        second_surname = 'Last', 
                        phonetic_first_name = 'First', 
                        phonetic_last_name = 'Last', 
                        city = 'Helsingborg', 
                        state = 'State', 
                        country = 'Sweden', 
                        county = 'Skane', 
                        address_line1 = 'Address', 
                        address_line2 = 'Address', 
                        address_line3 = 'Address', 
                        land_line_number = '+46707938475', 
                        fax_number = '+46707938475', 
                        state_code = 'PR', 
                        fiscal_code = 'MLN45266378', 
                        tax_code = '42356343', 
                        tax_code_type = 'VAT', 
                        recipient_code_type = 'EMAIL', 
                        recipient_code = 'abc@checkout.co', 
                        country_of_origin = 'Sweden', 
                        email = 'ordercapture@email.com', 
                        zip_code = '25185', 
                        mobile_number = '+46707938475', )
                    ],
                vpc_codes = 9JMV3V,
                consents = TIPPING_HAZARD, TASKRABBIT, NEED_HELP
            )
        else:
            return CheckoutRequest(
                shopping_type = 'ONLINE',
                channel = 'WEBAPP',
                language_code = 'en',
                items = [
                    order_capture_client.models.item_request.ItemRequest(
                        item_no = '10098949', 
                        quantity = 1, 
                        uom = 'PIECE', 
                        group = 'DEFAULT', 
                        shopping_profile = 'ONLINE', 
                        external_ref_id = '5', )
                    ],
        )
        """

    def testCheckoutRequest(self):
        """Test CheckoutRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
