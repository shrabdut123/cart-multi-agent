# coding: utf-8

"""
    OrderCapture

    Order Capture Checkout API Definitions

    The version of the OpenAPI document: v2.0.8
    Contact: dl.order.capture.dev.se@ingka.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from order_capture_client.models.ds_context_dto import DSContextDto

class TestDSContextDto(unittest.TestCase):
    """DSContextDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DSContextDto:
        """Test DSContextDto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DSContextDto`
        """
        model = DSContextDto()
        if include_optional:
            return DSContextDto(
                retail_unit = 'se',
                excl_tax_country = True,
                checkout_id = '090aae12-9a55-4080-8920-e3450f6cb881',
                currency = 'SEK',
                scope = order_capture_client.models.scope_dto.ScopeDto(
                    type = 'HOME_DELIVERY', 
                    sub_types = [
                        order_capture_client.models.sub_type_dto.SubTypeDto(
                            id = 'PUP', 
                            max_collection_points = '1', )
                        ], ),
                config = order_capture_client.models.ds_config_dto.DSConfigDto(
                    enable_lead_time_orchestration = True, 
                    enable_prime_time_calculation = True, 
                    service_offer_compatible_deliveries = [
                        order_capture_client.models.service_offer_compatible_delivery_dto.ServiceOfferCompatibleDeliveryDto(
                            delivery_service_item_no = '', )
                        ], 
                    allowed_pts_deliveries = [
                        ''
                        ], ),
                business_unit = order_capture_client.models.business_unit_dto.BusinessUnitDto(
                    code = 'SE', 
                    type = 'RU', ),
                customer_context = order_capture_client.models.customer_context_dto.CustomerContextDto(
                    customer_type = 'PRIVATE', 
                    family_id = '', 
                    employee_id = '', ),
                capability = order_capture_client.models.capability_dto.CapabilityDto(
                    wheel_chair = True, 
                    range_of_days = True, 
                    auth_to_leave = True, )
            )
        else:
            return DSContextDto(
        )
        """

    def testDSContextDto(self):
        """Test DSContextDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
