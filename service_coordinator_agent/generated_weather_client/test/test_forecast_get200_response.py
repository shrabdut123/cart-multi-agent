# coding: utf-8

"""
    Open-Meteo Weather API

    REST API for retrieving current weather data from Open-Meteo.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from weather_client.models.forecast_get200_response import ForecastGet200Response

class TestForecastGet200Response(unittest.TestCase):
    """ForecastGet200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ForecastGet200Response:
        """Test ForecastGet200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ForecastGet200Response`
        """
        model = ForecastGet200Response()
        if include_optional:
            return ForecastGet200Response(
                latitude = 48.86,
                longitude = 2.3399997,
                generationtime_ms = 1.337,
                utc_offset_seconds = 56,
                timezone = 'GMT',
                timezone_abbreviation = 'GMT',
                elevation = 1.337,
                current_weather_units = weather_client.models._forecast_get_200_response_current_weather_units._forecast_get_200_response_current_weather_units(
                    time = 'iso8601', 
                    interval = 'seconds', 
                    temperature = '°C', 
                    windspeed = 'km/h', 
                    winddirection = '°', 
                    is_day = '', 
                    weathercode = 'wmo code', ),
                current_weather = weather_client.models._forecast_get_200_response_current_weather._forecast_get_200_response_current_weather(
                    time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    interval = 900, 
                    temperature = 22.8, 
                    windspeed = 8.9, 
                    winddirection = 40, 
                    is_day = 0, 
                    weathercode = 0, )
            )
        else:
            return ForecastGet200Response(
        )
        """

    def testForecastGet200Response(self):
        """Test ForecastGet200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
